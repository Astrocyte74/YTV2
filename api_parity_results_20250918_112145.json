[
  {
    "endpoint": "/health",
    "params": null,
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "status": "healthy",
      "timestamp": "2025-09-18T17:21:38.881376",
      "service": "ytv2-telegram-bot"
    },
    "postgres_data": {
      "status": "healthy",
      "timestamp": "2025-09-18T17:21:39.073836",
      "service": "ytv2-telegram-bot"
    },
    "timestamp": "2025-09-18T11:21:39.022311"
  },
  {
    "endpoint": "/health/backend",
    "params": null,
    "sqlite_status": 404,
    "postgres_status": 200,
    "sqlite_data": null,
    "postgres_data": {
      "backend": "PostgreSQLContentIndex",
      "read_from_postgres": true,
      "using_sqlite": false,
      "dsn_set": true,
      "psycopg2_available": true,
      "timestamp": "2025-09-18T17:21:39.493934",
      "record_count": 81
    },
    "timestamp": "2025-09-18T11:21:39.807488"
  },
  {
    "endpoint": "/api/filters",
    "params": null,
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "source": [
        {
          "value": "youtube",
          "count": 81
        }
      ],
      "language": [
        {
          "value": "en",
          "count": 76
        },
        {
          "value": "fr",
          "count": 5
        }
      ],
      "category": [
        {
          "value": "Technology",
          "count": 40,
          "subcategories": [
            {
              "value": "Software Tutorials",
              "count": 17
            },
            {
              "value": "Tech Reviews & Comparisons",
              "count": 11
            },
            {
              "value": "Programming & Software Development",
              "count": 10
            },
            {
              "value": "Tech News & Trends",
              "count": 8
            },
            {
              "value": "Web Development",
              "count": 4
            },
            {
              "value": "Mobile Development",
              "count": 3
            },
            {
              "value": "DevOps & Infrastructure",
              "count": 2
            },
            {
              "value": "Databases & Data Science",
              "count": 1
            }
          ]
        },
        {
          "value": "History",
          "count": 21,
          "subcategories": [
            {
              "value": "Modern History",
              "count": 16
            },
            {
              "value": "Historical Analysis",
              "count": 12
            },
            {
              "value": "Cultural Heritage",
              "count": 6
            },
            {
              "value": "Ancient Civilizations",
              "count": 2
            }
          ]
        },
        {
          "value": "AI Software Development",
          "count": 20,
          "subcategories": [
            {
              "value": "Agents & MCP/Orchestration",
              "count": 10
            },
            {
              "value": "APIs & SDKs",
              "count": 8
            },
            {
              "value": "Model Selection & Evaluation",
              "count": 6
            },
            {
              "value": "Deployment & Serving",
              "count": 5
            },
            {
              "value": "Security & Safety",
              "count": 3
            },
            {
              "value": "Cost Optimisation",
              "count": 2
            },
            {
              "value": "Prompt Engineering & RAG",
              "count": 2
            },
            {
              "value": "Training & Fine-Tuning",
              "count": 1
            },
            {
              "value": "Data Engineering & ETL",
              "count": 1
            }
          ]
        },
        {
          "value": "Education",
          "count": 19,
          "subcategories": [
            {
              "value": "Tutorials & Courses",
              "count": 14
            },
            {
              "value": "Teaching Methods",
              "count": 5
            },
            {
              "value": "Academic Subjects",
              "count": 4
            }
          ]
        },
        {
          "value": "Business",
          "count": 14,
          "subcategories": [
            {
              "value": "Industry Analysis",
              "count": 10
            },
            {
              "value": "Finance & Investing",
              "count": 2
            },
            {
              "value": "Career Development",
              "count": 2
            },
            {
              "value": "Leadership & Management",
              "count": 1
            },
            {
              "value": "Marketing & Sales",
              "count": 1
            }
          ]
        },
        {
          "value": "World War II (WWII)",
          "count": 13,
          "subcategories": [
            {
              "value": "European Theatre",
              "count": 7
            },
            {
              "value": "Aftermath & Reconstruction",
              "count": 4
            },
            {
              "value": "Biographies & Commanders",
              "count": 3
            },
            {
              "value": "Home Front & Society",
              "count": 3
            },
            {
              "value": "Technology & Weapons",
              "count": 3
            },
            {
              "value": "Causes & Prelude",
              "count": 3
            },
            {
              "value": "Pacific Theatre",
              "count": 2
            },
            {
              "value": "Holocaust & War Crimes",
              "count": 2
            },
            {
              "value": "Intelligence & Codebreaking",
              "count": 1
            }
          ]
        },
        {
          "value": "News & Politics",
          "count": 4,
          "subcategories": [
            {
              "value": "Political Analysis",
              "count": 4
            },
            {
              "value": "Current Events",
              "count": 3
            },
            {
              "value": "Government & Policy",
              "count": 3
            },
            {
              "value": "International Affairs",
              "count": 1
            }
          ]
        },
        {
          "value": "Entertainment",
          "count": 3,
          "subcategories": [
            {
              "value": "Comedy & Humor",
              "count": 1
            },
            {
              "value": "Music & Performance",
              "count": 1
            },
            {
              "value": "Movies & TV",
              "count": 1
            },
            {
              "value": "Reaction Content",
              "count": 1
            }
          ]
        },
        {
          "value": "General",
          "count": 2,
          "subcategories": [
            {
              "value": "Mixed Content",
              "count": 2
            }
          ]
        },
        {
          "value": "Hobbies & Special Interests",
          "count": 2,
          "subcategories": [
            {
              "value": "Automotive",
              "count": 2
            }
          ]
        },
        {
          "value": "Astronomy",
          "count": 1,
          "subcategories": [
            {
              "value": "Space Missions & Exploration",
              "count": 1
            },
            {
              "value": "Solar System & Planets",
              "count": 1
            },
            {
              "value": "Space News & Discoveries",
              "count": 1
            }
          ]
        },
        {
          "value": "World War I (WWI)",
          "count": 1,
          "subcategories": [
            {
              "value": "Aftermath & Interwar",
              "count": 1
            }
          ]
        },
        {
          "value": "Reviews & Products",
          "count": 1,
          "subcategories": [
            {
              "value": "Comparisons & Tests",
              "count": 1
            },
            {
              "value": "Buying Guides",
              "count": 1
            }
          ]
        },
        {
          "value": "Computer Hardware",
          "count": 1,
          "subcategories": [
            {
              "value": "Networking & NAS",
              "count": 1
            },
            {
              "value": "Cooling & Thermals",
              "count": 1
            }
          ]
        },
        {
          "value": "Science & Nature",
          "count": 1,
          "subcategories": [
            {
              "value": "Physics & Chemistry",
              "count": 1
            }
          ]
        }
      ],
      "content_type": [
        {
          "value": "Tutorial",
          "count": 21
        },
        {
          "value": "Discussion",
          "count": 15
        },
        {
          "value": "Documentary",
          "count": 12
        },
        {
          "value": "Review",
          "count": 11
        },
        {
          "value": "News",
          "count": 9
        },
        {
          "value": "Guide",
          "count": 8
        },
        {
          "value": "Presentation",
          "count": 5
        }
      ],
      "complexity_level": [
        {
          "value": "Intermediate",
          "count": 51
        },
        {
          "value": "Beginner",
          "count": 30
        }
      ],
      "channel": [
        {
          "value": "Mark Felton Productions",
          "count": 9
        },
        {
          "value": "WorldofAI",
          "count": 4
        },
        {
          "value": "Engineering Explained",
          "count": 4
        },
        {
          "value": "Global News",
          "count": 3
        },
        {
          "value": "harvardbusinessreview",
          "count": 2
        },
        {
          "value": "StarTalk",
          "count": 2
        },
        {
          "value": "HistoryMatters",
          "count": 2
        },
        {
          "value": "Fireship",
          "count": 2
        },
        {
          "value": "AICodeKing",
          "count": 2
        },
        {
          "value": "AI LABS",
          "count": 2
        },
        {
          "value": "wolfcrow",
          "count": 1
        },
        {
          "value": "tested",
          "count": 1
        },
        {
          "value": "motivationaldoc",
          "count": 1
        },
        {
          "value": "moreperfectunion",
          "count": 1
        },
        {
          "value": "intheworldofai",
          "count": 1
        },
        {
          "value": "halfasinteresting",
          "count": 1
        },
        {
          "value": "filmalysis",
          "count": 1
        },
        {
          "value": "easywayactually1",
          "count": 1
        },
        {
          "value": "bibleproject",
          "count": 1
        },
        {
          "value": "Weird History",
          "count": 1
        },
        {
          "value": "Vox",
          "count": 1
        },
        {
          "value": "Tyler Stalman",
          "count": 1
        },
        {
          "value": "TomScottGo",
          "count": 1
        },
        {
          "value": "TodayIFoundOut",
          "count": 1
        },
        {
          "value": "The Quantified Scientist",
          "count": 1
        },
        {
          "value": "Talking Time",
          "count": 1
        },
        {
          "value": "TEDEd",
          "count": 1
        },
        {
          "value": "Sean Kochel",
          "count": 1
        },
        {
          "value": "ScienceChannel9000",
          "count": 1
        },
        {
          "value": "SciShow",
          "count": 1
        },
        {
          "value": "SagasuRunning",
          "count": 1
        },
        {
          "value": "SWFT",
          "count": 1
        },
        {
          "value": "Ray Amjad",
          "count": 1
        },
        {
          "value": "Proper Honest Tech",
          "count": 1
        },
        {
          "value": "PBS Eons",
          "count": 1
        },
        {
          "value": "NASCompares",
          "count": 1
        },
        {
          "value": "ModernDayTech",
          "count": 1
        },
        {
          "value": "MarkFeltonProductions",
          "count": 1
        },
        {
          "value": "Lucid Software",
          "count": 1
        },
        {
          "value": "JulianGoldieSEO",
          "count": 1
        },
        {
          "value": "Incomestreamsurfers",
          "count": 1
        },
        {
          "value": "GitButler",
          "count": 1
        },
        {
          "value": "Fran\u00e7ais avec Nelly",
          "count": 1
        },
        {
          "value": "EthanChlebowski",
          "count": 1
        },
        {
          "value": "EpicSpaceman",
          "count": 1
        },
        {
          "value": "EmmaCruises",
          "count": 1
        },
        {
          "value": "DC Rainmaker",
          "count": 1
        },
        {
          "value": "Comedy Central Africa",
          "count": 1
        },
        {
          "value": "ChrisFrameOfficial",
          "count": 1
        },
        {
          "value": "CGPGrey",
          "count": 1
        },
        {
          "value": "BloombergTechnology",
          "count": 1
        },
        {
          "value": "Betterway-channel",
          "count": 1
        },
        {
          "value": "Barn Theatre",
          "count": 1
        },
        {
          "value": "BFBS Creative",
          "count": 1
        },
        {
          "value": "BBC News",
          "count": 1
        },
        {
          "value": "Amazon Web Services",
          "count": 1
        },
        {
          "value": "Alex Ziskind",
          "count": 1
        },
        {
          "value": "AILABS-393",
          "count": 1
        },
        {
          "value": "1988AI",
          "count": 1
        }
      ],
      "has_audio": [
        {
          "value": false,
          "count": 16
        },
        {
          "value": true,
          "count": 65
        }
      ]
    },
    "postgres_data": {
      "categories": [
        {
          "value": "Technology",
          "count": 40
        },
        {
          "value": "History",
          "count": 21
        },
        {
          "value": "AI Software Development",
          "count": 19
        },
        {
          "value": "Education",
          "count": 19
        },
        {
          "value": "Business",
          "count": 14
        },
        {
          "value": "World War II (WWII)",
          "count": 13
        },
        {
          "value": "News & Politics",
          "count": 4
        },
        {
          "value": "Entertainment",
          "count": 3
        },
        {
          "value": "General",
          "count": 2
        },
        {
          "value": "Hobbies & Special Interests",
          "count": 2
        },
        {
          "value": "Astronomy",
          "count": 1
        },
        {
          "value": "Computer Hardware",
          "count": 1
        },
        {
          "value": "Reviews & Products",
          "count": 1
        },
        {
          "value": "Science & Nature",
          "count": 1
        },
        {
          "value": "World War I (WWI)",
          "count": 1
        }
      ],
      "channels": [
        {
          "value": "Mark Felton Productions",
          "count": 9
        },
        {
          "value": "Engineering Explained",
          "count": 4
        },
        {
          "value": "WorldofAI",
          "count": 4
        },
        {
          "value": "Global News",
          "count": 3
        },
        {
          "value": "AI LABS",
          "count": 2
        },
        {
          "value": "AICodeKing",
          "count": 2
        },
        {
          "value": "harvardbusinessreview",
          "count": 2
        },
        {
          "value": "Fireship",
          "count": 2
        },
        {
          "value": "HistoryMatters",
          "count": 2
        },
        {
          "value": "StarTalk",
          "count": 2
        },
        {
          "value": "tested",
          "count": 1
        },
        {
          "value": "PBS Eons",
          "count": 1
        },
        {
          "value": "Weird History",
          "count": 1
        },
        {
          "value": "TEDEd",
          "count": 1
        },
        {
          "value": "Tyler Stalman",
          "count": 1
        },
        {
          "value": "MarkFeltonProductions",
          "count": 1
        },
        {
          "value": "JulianGoldieSEO",
          "count": 1
        },
        {
          "value": "GitButler",
          "count": 1
        },
        {
          "value": "bibleproject",
          "count": 1
        },
        {
          "value": "Alex Ziskind",
          "count": 1
        },
        {
          "value": "Proper Honest Tech",
          "count": 1
        },
        {
          "value": "Barn Theatre",
          "count": 1
        },
        {
          "value": "BFBS Creative",
          "count": 1
        },
        {
          "value": "Sean Kochel",
          "count": 1
        },
        {
          "value": "intheworldofai",
          "count": 1
        },
        {
          "value": "wolfcrow",
          "count": 1
        },
        {
          "value": "AILABS-393",
          "count": 1
        },
        {
          "value": "motivationaldoc",
          "count": 1
        },
        {
          "value": "Betterway-channel",
          "count": 1
        },
        {
          "value": "SciShow",
          "count": 1
        },
        {
          "value": "Incomestreamsurfers",
          "count": 1
        },
        {
          "value": "ScienceChannel9000",
          "count": 1
        },
        {
          "value": "easywayactually1",
          "count": 1
        },
        {
          "value": "Comedy Central Africa",
          "count": 1
        },
        {
          "value": "BBC News",
          "count": 1
        },
        {
          "value": "BloombergTechnology",
          "count": 1
        },
        {
          "value": "CGPGrey",
          "count": 1
        },
        {
          "value": "EthanChlebowski",
          "count": 1
        },
        {
          "value": "SWFT",
          "count": 1
        },
        {
          "value": "Ray Amjad",
          "count": 1
        },
        {
          "value": "The Quantified Scientist",
          "count": 1
        },
        {
          "value": "SagasuRunning",
          "count": 1
        },
        {
          "value": "ModernDayTech",
          "count": 1
        },
        {
          "value": "Lucid Software",
          "count": 1
        },
        {
          "value": "moreperfectunion",
          "count": 1
        },
        {
          "value": "TodayIFoundOut",
          "count": 1
        },
        {
          "value": "TomScottGo",
          "count": 1
        },
        {
          "value": "Vox",
          "count": 1
        },
        {
          "value": "Talking Time",
          "count": 1
        },
        {
          "value": "DC Rainmaker",
          "count": 1
        }
      ],
      "years": [
        {
          "value": 2025,
          "count": 81
        }
      ],
      "has_audio": [
        {
          "value": true,
          "count": 65
        },
        {
          "value": false,
          "count": 16
        }
      ],
      "variants": [
        {
          "value": "audio",
          "count": 75
        },
        {
          "value": "audio-fr",
          "count": 4
        },
        {
          "value": "bullet-points",
          "count": 2
        }
      ],
      "languages": []
    },
    "timestamp": "2025-09-18T11:21:40.545741"
  },
  {
    "endpoint": "/api/reports",
    "params": {
      "size": 1
    },
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "reports": [
        {
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "channel": "WorldofAI",
          "published_at": "2025-09-17T00:00:00Z",
          "duration_seconds": 543,
          "analysis": {
            "category": [
              "AI Software Development"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "glm-4-5-coding-model",
              "claude-code-and-open-code-setu",
              "agentic-coding-and-lsp-feature"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 9478
          },
          "media_metadata": {
            "video_duration_seconds": 543,
            "mp3_duration_seconds": 0
          },
          "file_stem": "DqBQuTuOqgY",
          "video_id": "DqBQuTuOqgY",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}]}",
          "indexed_at": "2025-09-17T06:34:00.302974",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1724
        }
      ],
      "pagination": {
        "page": 1,
        "size": 1,
        "total_count": 81,
        "total_pages": 81,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "postgres_data": {
      "reports": [
        {
          "video_id": "NVkHfn6-Zl4",
          "id": "yt:NVkHfn6-Zl4",
          "title": "10 Cool Facts About The Lewis & Clark Expedition",
          "channel_name": "Weird History",
          "published_at": "2020-04-12T00:00:00+00:00",
          "duration_seconds": 685,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/NVkHfn6-Zl4/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=NVkHfn6-Zl4",
          "subcategories_json": {
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ]
          },
          "topics_json": [
            "lewis-and-clark-expedition",
            "corps-of-discovery",
            "westward-expansion"
          ],
          "analysis_json": {
            "language": "en",
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ],
            "key_topics": [
              "lewis-and-clark-expedition",
              "corps-of-discovery",
              "westward-expansion"
            ],
            "content_type": "Documentary",
            "named_entities": [],
            "schema_version": 2,
            "complexity_level": "Beginner"
          },
          "has_audio": true,
          "indexed_at": "2025-09-17T13:56:44.479177+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "{'comprehensive': 'Comprehensive Summary: 10 Cool Facts About The Lewis & Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.', 'audio': 'Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.'}",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">{&#x27;comprehensive&#x27;: &#x27;Comprehensive Summary: 10 Cool Facts About The Lewis &amp; Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.&#x27;, &#x27;audio&#x27;: &#x27;Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.&#x27;}</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        }
      ],
      "pagination": {
        "page": 1,
        "size": 1,
        "total_count": 81,
        "total_pages": 81,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "timestamp": "2025-09-18T11:21:41.285976",
    "count_comparison": {
      "sqlite": 1,
      "postgres": 1,
      "match": true
    }
  },
  {
    "endpoint": "/api/reports",
    "params": {
      "size": 5
    },
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "reports": [
        {
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "channel": "WorldofAI",
          "published_at": "2025-09-17T00:00:00Z",
          "duration_seconds": 543,
          "analysis": {
            "category": [
              "AI Software Development"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "glm-4-5-coding-model",
              "claude-code-and-open-code-setu",
              "agentic-coding-and-lsp-feature"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 9478
          },
          "media_metadata": {
            "video_duration_seconds": 543,
            "mp3_duration_seconds": 0
          },
          "file_stem": "DqBQuTuOqgY",
          "video_id": "DqBQuTuOqgY",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}]}",
          "indexed_at": "2025-09-17T06:34:00.302974",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1724
        },
        {
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "channel": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 857,
          "analysis": {
            "category": [
              "Technology"
            ],
            "subcategory": "Tech News & Trends",
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "github-tool",
              "ai-coding-assistant",
              "developer-productivity"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 15051
          },
          "media_metadata": {
            "video_duration_seconds": 857,
            "mp3_duration_seconds": 0
          },
          "file_stem": "KRWQTF0iAdM",
          "video_id": "KRWQTF0iAdM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T00:05:39.255087",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 2788
        },
        {
          "id": "yt:sJ7kI13c-ig",
          "title": "GPT-5 Codex V/S Claude Code & GLM Code: Should YOU SWITCH?",
          "thumbnail_url": "https://i.ytimg.com/vi/sJ7kI13c-ig/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=sJ7kI13c-ig",
          "channel": "AICodeKing",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 497,
          "analysis": {
            "category": [
              "AI Software Development",
              "Reviews & Products"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Cost Optimisation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Reviews & Products",
                "subcategories": [
                  "Comparisons & Tests",
                  "Buying Guides"
                ]
              }
            ],
            "content_type": "Review",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "gpt-5-codex",
              "claude-code",
              "glm-code",
              "coding-benchmarks",
              "multi-file-repo-edits"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 6415
          },
          "media_metadata": {
            "video_duration_seconds": 497,
            "mp3_duration_seconds": 0
          },
          "file_stem": "sJ7kI13c-ig",
          "video_id": "sJ7kI13c-ig",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Cost Optimisation\", \"APIs & SDKs\"]}, {\"category\": \"Reviews & Products\", \"subcategories\": [\"Comparisons & Tests\", \"Buying Guides\"]}]}",
          "indexed_at": "2025-09-17T00:16:25.157435",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1214
        },
        {
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "channel": "NASCompares",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 257,
          "analysis": {
            "category": [
              "Computer Hardware",
              "Technology"
            ],
            "subcategory": "Networking & NAS",
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ],
            "content_type": "News",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "nas-shipping-timelines",
              "ultra-cooling-upgrades",
              "cross-format-search-ocr",
              "mobile-app-testing",
              "ifa-2025-updates"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 4737
          },
          "media_metadata": {
            "video_duration_seconds": 257,
            "mp3_duration_seconds": 0
          },
          "file_stem": "VCZV-UXDRzM",
          "video_id": "VCZV-UXDRzM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Computer Hardware\", \"subcategories\": [\"Networking & NAS\", \"Cooling & Thermals\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\"]}]}",
          "indexed_at": "2025-09-17T06:39:08.922419",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 896
        },
        {
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "channel": "AI LABS",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 570,
          "analysis": {
            "category": [
              "AI Software Development",
              "Technology"
            ],
            "subcategory": "Agents & MCP/Orchestration",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "mcp-agents",
              "nextjs-workflow",
              "supabase-backend",
              "shadcn-ui-components",
              "stripe-checkout-integration"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 10388
          },
          "media_metadata": {
            "video_duration_seconds": 570,
            "mp3_duration_seconds": 0
          },
          "file_stem": "yJv2JRM--ws",
          "video_id": "yJv2JRM--ws",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Web Development\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T13:43:43.651388",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1876
        }
      ],
      "pagination": {
        "page": 1,
        "size": 5,
        "total_count": 81,
        "total_pages": 17,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "postgres_data": {
      "reports": [
        {
          "video_id": "NVkHfn6-Zl4",
          "id": "yt:NVkHfn6-Zl4",
          "title": "10 Cool Facts About The Lewis & Clark Expedition",
          "channel_name": "Weird History",
          "published_at": "2020-04-12T00:00:00+00:00",
          "duration_seconds": 685,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/NVkHfn6-Zl4/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=NVkHfn6-Zl4",
          "subcategories_json": {
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ]
          },
          "topics_json": [
            "lewis-and-clark-expedition",
            "corps-of-discovery",
            "westward-expansion"
          ],
          "analysis_json": {
            "language": "en",
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ],
            "key_topics": [
              "lewis-and-clark-expedition",
              "corps-of-discovery",
              "westward-expansion"
            ],
            "content_type": "Documentary",
            "named_entities": [],
            "schema_version": 2,
            "complexity_level": "Beginner"
          },
          "has_audio": true,
          "indexed_at": "2025-09-17T13:56:44.479177+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "{'comprehensive': 'Comprehensive Summary: 10 Cool Facts About The Lewis & Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.', 'audio': 'Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.'}",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">{&#x27;comprehensive&#x27;: &#x27;Comprehensive Summary: 10 Cool Facts About The Lewis &amp; Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.&#x27;, &#x27;audio&#x27;: &#x27;Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.&#x27;}</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "yJv2JRM--ws",
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "channel_name": "AI LABS",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 570,
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ]
          },
          "topics_json": [
            "mcp-agents",
            "nextjs-workflow",
            "supabase-backend",
            "shadcn-ui-components",
            "stripe-checkout-integration"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T13:43:43.651388+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.\n\n2) Top 3 insights:\n- Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.\n- Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.\n- ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.\n\n3) Actions/next steps:\n- Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.\n- Draft a PRD, then use converter prompts to generate MCP-specific instructions.\n- Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.\n- Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.\n\n4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.</li>\n<li class=\"mb-2\">Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.</li>\n<li class=\"mb-2\">ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.</li>\n<li class=\"mb-2\">Draft a PRD, then use converter prompts to generate MCP-specific instructions.</li>\n<li class=\"mb-2\">Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.</li>\n<li class=\"mb-2\">Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "VCZV-UXDRzM",
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "channel_name": "NASCompares",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 257,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "subcategories_json": {
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ]
          },
          "topics_json": [
            "nas-shipping-timelines",
            "ultra-cooling-upgrades",
            "cross-format-search-ocr",
            "mobile-app-testing",
            "ifa-2025-updates"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T06:39:08.922419+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.\n\n2) **Top 3 insights:**\n- D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.\n- Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.\n- Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.\n\n3) **Actions/next steps:**\n- For backers: watch for D4/D6 September shipping wave announcements.\n- Track Ultra shipping updates for October\u2013end 2025 window.\n- Try the early mobile app; note missing semantic search and limited system control.\n- Explore consolidated search and knowledge base features to optimize cross-format discovery.\n\n4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.</p>\n<p class=\"mb-4 leading-relaxed\">2) **Top 3 insights:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.</li>\n<li class=\"mb-2\">Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.</li>\n<li class=\"mb-2\">Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) **Actions/next steps:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">For backers: watch for D4/D6 September shipping wave announcements.</li>\n<li class=\"mb-2\">Track Ultra shipping updates for October\u2013end 2025 window.</li>\n<li class=\"mb-2\">Try the early mobile app; note missing semantic search and limited system control.</li>\n<li class=\"mb-2\">Explore consolidated search and knowledge base features to optimize cross-format discovery.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "DqBQuTuOqgY",
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "channel_name": "WorldofAI",
          "published_at": "2025-09-17T00:00:00+00:00",
          "duration_seconds": 543,
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ]
          },
          "topics_json": [
            "glm-4-5-coding-model",
            "claude-code-and-open-code-setu",
            "agentic-coding-and-lsp-feature"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T06:34:00.302974+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: GLM 4.5 is a strong, affordable, open-source coding model accessible via Claude Code or Open Code, offering better reliability and robust agentic coding features.\n\n2) Top 3 insights:\n- Claude Code faces rate limits and reduced context, hurting agentic performance.\n- GLM 4.5 Coding Light plan costs $3/month, 120 prompts per 5 hours, discounted; cheaper, reliable, integrates with coding tools.\n- Open Code offers open-source terminal agent with themable UI, LSP-enabled language awareness, and multi-sessions; often preferable over Claude Code.\n\n3) Actions/next steps:\n- Install Claude Code via npm, open with 'claude', set API key env var, select GLM 4.5 Coding Light model.\n- Alternatively, install Open Code, run 'open code o login', choose provider, then select GLM 4.5 model.\n- Use OpenRouter for free GLM 4.5 Air access via Open Code; note reduced performance versus original.\n- Leverage Open Code features: LSP, multi-sessions, and UI theming for improved coding workflows.\n\n4) Why watch: Learn how to switch to GLM 4.5 for faster, cheaper coding workflows and set it up in Claude Code or Open Code.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: GLM 4.5 is a strong, affordable, open-source coding model accessible via Claude Code or Open Code, offering better reliability and robust agentic coding features.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Claude Code faces rate limits and reduced context, hurting agentic performance.</li>\n<li class=\"mb-2\">GLM 4.5 Coding Light plan costs $3/month, 120 prompts per 5 hours, discounted; cheaper, reliable, integrates with coding tools.</li>\n<li class=\"mb-2\">Open Code offers open-source terminal agent with themable UI, LSP-enabled language awareness, and multi-sessions; often preferable over Claude Code.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Install Claude Code via npm, open with &#x27;claude&#x27;, set API key env var, select GLM 4.5 Coding Light model.</li>\n<li class=\"mb-2\">Alternatively, install Open Code, run &#x27;open code o login&#x27;, choose provider, then select GLM 4.5 model.</li>\n<li class=\"mb-2\">Use OpenRouter for free GLM 4.5 Air access via Open Code; note reduced performance versus original.</li>\n<li class=\"mb-2\">Leverage Open Code features: LSP, multi-sessions, and UI theming for improved coding workflows.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Learn how to switch to GLM 4.5 for faster, cheaper coding workflows and set it up in Claude Code or Open Code.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "sJ7kI13c-ig",
          "id": "yt:sJ7kI13c-ig",
          "title": "GPT-5 Codex V/S Claude Code & GLM Code: Should YOU SWITCH?",
          "channel_name": "AICodeKing",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 497,
          "thumbnail_url": "https://i.ytimg.com/vi/sJ7kI13c-ig/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=sJ7kI13c-ig",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Cost Optimisation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Reviews & Products",
                "subcategories": [
                  "Comparisons & Tests",
                  "Buying Guides"
                ]
              }
            ]
          },
          "topics_json": [
            "gpt-5-codex",
            "claude-code",
            "glm-code",
            "coding-benchmarks",
            "multi-file-repo-edits"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T00:16:25.157435+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: GPT\u20115 Codex improves coding efficiency and output, now second to Codebuff and slightly above Claude Code, but struggles with Godot and complex multi-file changes.\n\n2) Top 3 insights:\n- Claims ~90% fewer tokens with faster, better coding and longer reasoning; integrated across Codeex tools.\n- Benchmarks: solid Expo TMDB app but missing details; excellent Go Bubble Tea TUI; fails Godot/GDScript tasks.\n- Ranks second behind Codebuff, slightly beats Claude Code; fails multi-file repo edits; ChatGPT limits vary 30\u2013150 or 300\u20131,500 messages/5 hours.\n\n3) Actions/next steps:\n- Use GPT\u20115 Codex for general coding and TUIs; avoid Godot/GDScript and complex multi-file refactors.\n- If budget-constrained, prefer GLM Code\u2019s $3 plan; it remains unbeatable value per the reviewer.\n- Test GPT\u20115 Codex on your repo; verify multi-file change handling before switching from Claude Code or Codebuff.\n- Monitor API availability and message limits; current ranges are wide and load-dependent.\n\n4) Why watch: Quick, practical benchmarks comparing GPT\u20115 Codex, Claude Code, Codebuff, and GLM Code with clear strengths, weaknesses, limits, and switching guidance.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: GPT\u20115 Codex improves coding efficiency and output, now second to Codebuff and slightly above Claude Code, but struggles with Godot and complex multi-file changes.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Claims ~90% fewer tokens with faster, better coding and longer reasoning; integrated across Codeex tools.</li>\n<li class=\"mb-2\">Benchmarks: solid Expo TMDB app but missing details; excellent Go Bubble Tea TUI; fails Godot/GDScript tasks.</li>\n<li class=\"mb-2\">Ranks second behind Codebuff, slightly beats Claude Code; fails multi-file repo edits; ChatGPT limits vary 30\u2013150 or 300\u20131,500 messages/5 hours.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Use GPT\u20115 Codex for general coding and TUIs; avoid Godot/GDScript and complex multi-file refactors.</li>\n<li class=\"mb-2\">If budget-constrained, prefer GLM Code\u2019s $3 plan; it remains unbeatable value per the reviewer.</li>\n<li class=\"mb-2\">Test GPT\u20115 Codex on your repo; verify multi-file change handling before switching from Claude Code or Codebuff.</li>\n<li class=\"mb-2\">Monitor API availability and message limits; current ranges are wide and load-dependent.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Quick, practical benchmarks comparing GPT\u20115 Codex, Claude Code, Codebuff, and GLM Code with clear strengths, weaknesses, limits, and switching guidance.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        }
      ],
      "pagination": {
        "page": 1,
        "size": 5,
        "total_count": 81,
        "total_pages": 17,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "timestamp": "2025-09-18T11:21:42.129698",
    "count_comparison": {
      "sqlite": 5,
      "postgres": 5,
      "match": true
    }
  },
  {
    "endpoint": "/api/reports",
    "params": {
      "size": 10
    },
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "reports": [
        {
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "channel": "WorldofAI",
          "published_at": "2025-09-17T00:00:00Z",
          "duration_seconds": 543,
          "analysis": {
            "category": [
              "AI Software Development"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "glm-4-5-coding-model",
              "claude-code-and-open-code-setu",
              "agentic-coding-and-lsp-feature"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 9478
          },
          "media_metadata": {
            "video_duration_seconds": 543,
            "mp3_duration_seconds": 0
          },
          "file_stem": "DqBQuTuOqgY",
          "video_id": "DqBQuTuOqgY",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}]}",
          "indexed_at": "2025-09-17T06:34:00.302974",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1724
        },
        {
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "channel": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 857,
          "analysis": {
            "category": [
              "Technology"
            ],
            "subcategory": "Tech News & Trends",
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "github-tool",
              "ai-coding-assistant",
              "developer-productivity"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 15051
          },
          "media_metadata": {
            "video_duration_seconds": 857,
            "mp3_duration_seconds": 0
          },
          "file_stem": "KRWQTF0iAdM",
          "video_id": "KRWQTF0iAdM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T00:05:39.255087",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 2788
        },
        {
          "id": "yt:sJ7kI13c-ig",
          "title": "GPT-5 Codex V/S Claude Code & GLM Code: Should YOU SWITCH?",
          "thumbnail_url": "https://i.ytimg.com/vi/sJ7kI13c-ig/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=sJ7kI13c-ig",
          "channel": "AICodeKing",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 497,
          "analysis": {
            "category": [
              "AI Software Development",
              "Reviews & Products"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Cost Optimisation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Reviews & Products",
                "subcategories": [
                  "Comparisons & Tests",
                  "Buying Guides"
                ]
              }
            ],
            "content_type": "Review",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "gpt-5-codex",
              "claude-code",
              "glm-code",
              "coding-benchmarks",
              "multi-file-repo-edits"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 6415
          },
          "media_metadata": {
            "video_duration_seconds": 497,
            "mp3_duration_seconds": 0
          },
          "file_stem": "sJ7kI13c-ig",
          "video_id": "sJ7kI13c-ig",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Cost Optimisation\", \"APIs & SDKs\"]}, {\"category\": \"Reviews & Products\", \"subcategories\": [\"Comparisons & Tests\", \"Buying Guides\"]}]}",
          "indexed_at": "2025-09-17T00:16:25.157435",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1214
        },
        {
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "channel": "NASCompares",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 257,
          "analysis": {
            "category": [
              "Computer Hardware",
              "Technology"
            ],
            "subcategory": "Networking & NAS",
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ],
            "content_type": "News",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "nas-shipping-timelines",
              "ultra-cooling-upgrades",
              "cross-format-search-ocr",
              "mobile-app-testing",
              "ifa-2025-updates"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 4737
          },
          "media_metadata": {
            "video_duration_seconds": 257,
            "mp3_duration_seconds": 0
          },
          "file_stem": "VCZV-UXDRzM",
          "video_id": "VCZV-UXDRzM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Computer Hardware\", \"subcategories\": [\"Networking & NAS\", \"Cooling & Thermals\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\"]}]}",
          "indexed_at": "2025-09-17T06:39:08.922419",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 896
        },
        {
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "channel": "AI LABS",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 570,
          "analysis": {
            "category": [
              "AI Software Development",
              "Technology"
            ],
            "subcategory": "Agents & MCP/Orchestration",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "mcp-agents",
              "nextjs-workflow",
              "supabase-backend",
              "shadcn-ui-components",
              "stripe-checkout-integration"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 10388
          },
          "media_metadata": {
            "video_duration_seconds": 570,
            "mp3_duration_seconds": 0
          },
          "file_stem": "yJv2JRM--ws",
          "video_id": "yJv2JRM--ws",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Web Development\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T13:43:43.651388",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1876
        },
        {
          "id": "yt:DR7_vSPUYbA",
          "title": "iOS 26 is AMAZING! Do these 10 things FIRST!",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/DR7_vSPUYbA/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=DR7_vSPUYbA",
          "channel": "Proper Honest Tech",
          "published_at": "2025-09-15T00:00:00Z",
          "duration_seconds": 1142,
          "analysis": {
            "category": [],
            "subcategory": null,
            "categories": [],
            "content_type": "Guide",
            "complexity_level": "Beginner",
            "language": "en",
            "key_topics": [],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 20706
          },
          "media_metadata": {
            "video_duration_seconds": 1142,
            "mp3_duration_seconds": 0
          },
          "file_stem": "DR7_vSPUYbA",
          "video_id": "DR7_vSPUYbA",
          "subcategories_json": null,
          "indexed_at": "2025-09-15T23:54:45.244684",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 3808
        },
        {
          "id": "yt:vF8FWmzRd5M",
          "title": "TARS Agent: Powerful AI Operating System Can Automate ALL Computer Tasks! (Opensource)",
          "thumbnail_url": "https://i.ytimg.com/vi/vF8FWmzRd5M/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=vF8FWmzRd5M",
          "channel": "WorldofAI",
          "published_at": "2025-09-15T00:00:00Z",
          "duration_seconds": 485,
          "analysis": {
            "category": [],
            "subcategory": null,
            "categories": [],
            "content_type": "Guide",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [],
            "named_entities": []
          },
          "media": {
            "has_audio": true,
            "audio_duration_seconds": 238,
            "has_transcript": true,
            "transcript_chars": 8129
          },
          "media_metadata": {
            "video_duration_seconds": 485,
            "mp3_duration_seconds": 238
          },
          "file_stem": "vF8FWmzRd5M",
          "video_id": "vF8FWmzRd5M",
          "subcategories_json": null,
          "indexed_at": "2025-09-15T23:57:27.658746",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1494
        },
        {
          "id": "yt:OXEl4ACNq4Y",
          "title": "Carney government has decade-high approval rating, Ipsos poll shows",
          "thumbnail_url": "https://i.ytimg.com/vi/OXEl4ACNq4Y/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=OXEl4ACNq4Y",
          "channel": "Global News",
          "published_at": "2025-09-14T00:00:00Z",
          "duration_seconds": 125,
          "analysis": {
            "category": [],
            "subcategory": "Political Analysis",
            "categories": [
              {
                "category": "News & Politics",
                "subcategories": [
                  "Political Analysis",
                  "Government & Policy"
                ]
              }
            ],
            "content_type": "News",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "approval-rating-surge",
              "cost-of-living",
              "housing-affordability",
              "us-relations-trump",
              "economic-priorities"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": true,
            "audio_duration_seconds": 116,
            "has_transcript": true,
            "transcript_chars": 2032
          },
          "media_metadata": {
            "video_duration_seconds": 125,
            "mp3_duration_seconds": 116
          },
          "file_stem": "OXEl4ACNq4Y",
          "video_id": "OXEl4ACNq4Y",
          "subcategories_json": "{\"categories\": [{\"category\": \"News & Politics\", \"subcategories\": [\"Political Analysis\", \"Government & Policy\"]}]}",
          "indexed_at": "2025-09-14T06:51:34.088128",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 362
        },
        {
          "id": "yt:woFXNLSQvc8",
          "title": "OpenLovable: NEW Opensource Agent Mode Can Build ANYTHING! Create Full-Stack Apps With No CODE!",
          "thumbnail_url": "https://i.ytimg.com/vi/woFXNLSQvc8/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=woFXNLSQvc8",
          "channel": "WorldofAI",
          "published_at": "2025-09-13T00:00:00Z",
          "duration_seconds": 566,
          "analysis": {
            "category": [
              "AI Software Development"
            ],
            "subcategory": "Agents & MCP/Orchestration",
            "categories": [],
            "content_type": "Guide",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "open-source-ai-agent, react-typescript-tailwind-gene, firecrawl-integration-and-setu, local-vs-cloud-models-and-cost, chat-driven-code-editing"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": true,
            "audio_duration_seconds": 214,
            "has_transcript": true,
            "transcript_chars": 10241
          },
          "media_metadata": {
            "video_duration_seconds": 566,
            "mp3_duration_seconds": 214
          },
          "file_stem": "woFXNLSQvc8",
          "video_id": "woFXNLSQvc8",
          "subcategories_json": null,
          "indexed_at": "2025-09-13T07:41:48.106774",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1876
        },
        {
          "id": "yt:GIacCFniAXc",
          "title": "NATO launches \"Eastern Flank\" defence after Russian drones enter Poland",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/GIacCFniAXc/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=GIacCFniAXc",
          "channel": "Global News",
          "published_at": "2025-09-13T00:00:00Z",
          "duration_seconds": 126,
          "analysis": {
            "category": [],
            "subcategory": "International Affairs",
            "categories": [
              {
                "category": "News & Politics",
                "subcategories": [
                  "International Affairs",
                  "Current Events",
                  "Political Analysis"
                ]
              }
            ],
            "content_type": "News",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "nato-eastern-sentry",
              "russian-drones-in-poland",
              "eastern-flank-defence",
              "zapad-military-exercises",
              "deterrence-vs-escalation"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": true,
            "audio_duration_seconds": 150,
            "has_transcript": true,
            "transcript_chars": 1782
          },
          "media_metadata": {
            "video_duration_seconds": 126,
            "mp3_duration_seconds": 150
          },
          "file_stem": "GIacCFniAXc",
          "video_id": "GIacCFniAXc",
          "subcategories_json": "{\"categories\": [{\"category\": \"News & Politics\", \"subcategories\": [\"International Affairs\", \"Current Events\", \"Political Analysis\"]}]}",
          "indexed_at": "2025-09-14T06:42:00.881065",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 292
        }
      ],
      "pagination": {
        "page": 1,
        "size": 10,
        "total_count": 81,
        "total_pages": 9,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "postgres_data": {
      "reports": [
        {
          "video_id": "NVkHfn6-Zl4",
          "id": "yt:NVkHfn6-Zl4",
          "title": "10 Cool Facts About The Lewis & Clark Expedition",
          "channel_name": "Weird History",
          "published_at": "2020-04-12T00:00:00+00:00",
          "duration_seconds": 685,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/NVkHfn6-Zl4/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=NVkHfn6-Zl4",
          "subcategories_json": {
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ]
          },
          "topics_json": [
            "lewis-and-clark-expedition",
            "corps-of-discovery",
            "westward-expansion"
          ],
          "analysis_json": {
            "language": "en",
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Modern History"
                ]
              }
            ],
            "key_topics": [
              "lewis-and-clark-expedition",
              "corps-of-discovery",
              "westward-expansion"
            ],
            "content_type": "Documentary",
            "named_entities": [],
            "schema_version": 2,
            "complexity_level": "Beginner"
          },
          "has_audio": true,
          "indexed_at": "2025-09-17T13:56:44.479177+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "{'comprehensive': 'Comprehensive Summary: 10 Cool Facts About The Lewis & Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.', 'audio': 'Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.'}",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">{&#x27;comprehensive&#x27;: &#x27;Comprehensive Summary: 10 Cool Facts About The Lewis &amp; Clark Expedition\\n\\nOverview and Purpose\\n- In 1803, the Louisiana Purchase from France (828,000 square miles) doubled U.S. territory and spurred debate over its value.\\n- To gather knowledge and build support, President Thomas Jefferson sent the Corps of Discovery\u2014led by Meriwether Lewis and William Clark\u2014to reach the Pacific.\\n- Mission goals: map the region, establish relations with Native nations, collect scientific and ethnographic data, and search for a transcontinental water route.\\n\\nMission Outcomes and Legacy\\n- The Corps definitively disproved the myth of a practical all-water route across North America, disappointing Jefferson but greatly enriching geographic, scientific, and cultural understanding.\\n- Jefferson displayed expedition artifacts in his home, reflecting the mission\u2019s scientific value.\\n- Despite the breadth of the journey, the only confirmed, enduring in-situ physical trace is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nCorps Culture and Leadership\\n- Operating beyond formal U.S. jurisdiction, the Corps adopted egalitarian decision-making\u2014every member had a vote.\\n- York, Clark\u2019s enslaved man, and Sacagawea were treated as full, voting participants, a striking (if temporary) break from U.S. social hierarchies.\\n- This inclusive approach emphasized practical merit, shared responsibility, and group cohesion.\\n\\nIndigenous Diplomacy and Survival\\n- The expedition\u2019s success hinged on Indigenous knowledge and goodwill. Sacagawea\u2019s presence (especially while carrying her infant) signaled peaceful intent to many Native groups.\\n- Crossing the Bitterroot Range, the Corps nearly starved\u2014resorting to eating tallow candles.\\n- Nez Perce scouts considered attacking the weakened party; a woman named Watkuweis, recalling her own rescue by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt,\u201d saving the Corps and securing aid.\\n\\nSacagawea and Jean Baptiste (\u201cPompey\u201d)\\n- Sacagawea\u2019s contributions went far beyond guiding:\\n  - Identified edible/medicinal plants and landmarks, helping navigation and measurement.\\n  - Rescued crucial cargo\u2014including Lewis\u2019s journal\u2014during a hazardous river incident while holding her infant.\\n- She gave birth en route to Jean Baptiste, nicknamed \u201cPompey,\u201d who became a symbol of peaceful intent and was embraced by the Corps.\\n- After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care; Clark raised and educated him. Pompeys Pillar is named in his honor.\\n\\nHardships and Loss\\n- Only one member died during the expedition: Sergeant Charles Floyd, likely from a burst appendix, on August 15 (1804). He was buried on a Missouri River bluff memorialized as Floyd Bluff.\\n- Place-naming often reflected emotion and memory; the practice began with Floyd and extended to features like the Judith River, likely named by Clark for his future wife, Julia Hancock (they married in 1808).\\n\\nSeaman, Lewis\u2019s Newfoundland\\n- Naming confusion persisted for decades due to a journal smudge (\u201cScannon\u201d); consensus now recognizes the dog\u2019s name as Seaman.\\n- Seaman repeatedly saved members from drowning, guarded camp, once tried to attack a grizzly, and chased off a buffalo.\\n- Native observers were impressed; one group of teenagers stole Seaman, prompting Lewis to threaten to burn their village unless he was returned\u2014he was.\\n- Seaman\u2019s fate is unclear; a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nRecords, Artifacts, and Physical Traces\\n- Physical traces: members carved names into trees along the route, including a grove near the Pacific\u2014none survive today.\\n- Clark\u2019s Pompeys Pillar inscription remains the only confirmed, original on-site inscription.\\n- Lewis\u2019s journals:\\n  - Meticulous observations and precise sketches of flora and fauna suggest careful, controlled recording rather than hurried field notes.\\n  - Preserved in part thanks to Sacagawea\u2019s rescue during the river mishap and later generations of caretakers.\\n  - Housed at the American Philosophical Society in Philadelphia; viewable by appointment.\\n\\nPublic Perception and Communication\\n- With almost no news from the field, newspapers speculated that the Corps had perished\u2014from wildlife, Native attacks, or the elements.\\n- Only one message reached Washington, D.C., in August 1806, carrying findings from the expedition\u2019s first leg, underscoring the mission\u2019s isolation and the era\u2019s communication limits.\\n\\nUnifying Themes\\n- Inclusive leadership and shared decision-making strengthened performance under extreme conditions.\\n- Indigenous knowledge and individual acts of diplomacy\u2014especially by women\u2014were decisive to survival.\\n- The expedition traded a romantic myth (a transcontinental waterway) for a more accurate, science-based understanding of the continent.\\n- Scarcity of physical traces amplifies the value of surviving artifacts, maps, and journals.\\n- Place-naming and the prominence of companions (human and animal) reveal the expedition\u2019s deeply human dimension\u2014grief, affection, and morale.\\n\\nActionable Insights and Key Takeaways\\n- Build inclusive teams: empower all contributors based on merit; diverse perspectives can be mission-critical.\\n- Invest in local knowledge and cultural diplomacy: peaceful signals (such as the presence of women/children) can reduce conflict.\\n- Protect core knowledge assets: safeguard journals, maps, and specimens; plan redundancy for critical data.\\n- Prepare for communication blackouts: anticipate isolation and manage public expectations in long-duration missions.\\n- Engage with primary sources and preserved sites:\\n  - Visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription.\\n  - Request an appointment at the American Philosophical Society to view the original journals.\\n- Verify historical details critically: transcription errors (e.g., \u201cScannon\u201d vs. \u201cSeaman\u201d) can persist and distort interpretation.&#x27;, &#x27;audio&#x27;: &#x27;Here\u2019s an audio-friendly tour of ten cool facts about the Lewis and Clark Expedition, designed for easy listening and clear takeaways.\\n\\nLet\u2019s start with why the journey happened at all. In 1803, the United States bought the Louisiana Territory from France\u2014an enormous 828,000 square miles that instantly doubled the nation\u2019s size. People argued over whether this purchase was a good idea. To gather real knowledge and rally public support, President Thomas Jefferson sent the Corps of Discovery, led by Meriwether Lewis and William Clark, to find a route to the Pacific. Their mission was ambitious: map the lands, build relationships with Native nations, collect scientific and cultural information, and search for a practical water route that might link the Atlantic to the Pacific.\\n\\nWhat did they actually discover? They definitively disproved the romantic myth of an all-water route across North America that a trading nation could easily use. Jefferson was disappointed by that, but the expedition massively expanded scientific, geographic, and cultural understanding of the continent. Jefferson even displayed expedition artifacts in his home to highlight the mission\u2019s scientific value. And although they traveled thousands of miles, the only enduring, confirmed physical trace still in its original place is William Clark\u2019s 1806 inscription at Pompeys Pillar in Montana.\\n\\nNow for something unusual about the Corps itself: how it made decisions. They were often beyond the reach of formal U.S. authority, so they adopted surprisingly egalitarian decision-making. Every member had a vote. That included York, who was Clark\u2019s enslaved man, and Sacagawea, who traveled with her infant. Both were treated as full, voting participants. It was a temporary break from the society they came from, but it showed how much the team valued practical merit, responsibility, and cohesion under extreme conditions.\\n\\nThat brings us to how the Corps survived at all. Indigenous knowledge and goodwill were absolutely essential. Sacagawea\u2019s presence, especially while carrying her baby, signaled peaceful intentions to many Native groups. Even with help, there were moments of real danger. Crossing the Bitterroot Range, the party nearly starved and resorted to eating tallow candles. At one point, Nez Perce scouts considered attacking the weakened group. A woman named Watkuweis, who remembered being rescued by white men after being kidnapped by a rival tribe, urged her community to \u201cdo them no hurt.\u201d Her plea saved the Corps and secured the help they desperately needed.\\n\\nLet\u2019s talk more about Sacagawea and her son, Jean Baptiste, nicknamed \u201cPompey.\u201d Sacagawea\u2019s impact went far beyond serving as a guide. She identified edible and medicinal plants, pointed out landmarks, and helped with navigation and measurement. In a tense river incident, she saved crucial cargo\u2014including Lewis\u2019s journal\u2014while holding her infant son. Pompey became a sign of peace wherever the expedition went, and the Corps embraced him. After the journey, Sacagawea and her husband left Jean Baptiste in William Clark\u2019s care, and Clark raised and educated him. Today, Pompeys Pillar bears the child\u2019s nickname, a living reminder of the family\u2019s place in the story.\\n\\nThe expedition also faced hardship and loss. Only one member died during the entire journey: Sergeant Charles Floyd, likely from a burst appendix, on August 15, 1804. He was buried on a bluff along the Missouri River, now memorialized as Floyd Bluff. Naming places was one way the Corps processed their experiences. It began with Floyd and continued with features like the Judith River, which Clark likely named for his future wife, Julia Hancock. They married in 1808. These names carry an emotional record of grief, affection, and memory that still maps onto our landscape today.\\n\\nEven the expedition\u2019s dog became a legend. Lewis\u2019s Newfoundland was long misidentified as \u201cScannon\u201d because of a smudge in the journals, but consensus now recognizes his name as Seaman. He wasn\u2019t just a mascot. Seaman saved men from drowning, guarded camp, once tried to take on a grizzly, and even chased off a buffalo. Native observers were impressed, so much so that a group of teenagers once stole him. Lewis threatened to burn their village if the dog wasn\u2019t returned\u2014and he was. Seaman\u2019s fate after the expedition isn\u2019t clear, but a later report described a collar crediting him as \u201cthe greatest traveler of my species.\u201d\\n\\nWhat remains today? You might imagine a trail of carved names, but most physical traces have vanished. Members did inscribe their names on trees along the route, including a grove near the Pacific, yet none of those carvings survive. Clark\u2019s inscription at Pompeys Pillar stands alone as the only confirmed original inscription still in place. The written record, however, is rich. Lewis\u2019s journals feature meticulous observations and precise sketches of plants and animals. The quality suggests careful, controlled recording, not hurried field notes. Those journals were preserved partly thanks to Sacagawea\u2019s quick action in that river mishap, and thanks to later caretakers. You can view them by appointment at the American Philosophical Society in Philadelphia.\\n\\nIf you\u2019re wondering what people back home knew at the time, the answer is: almost nothing. With no reliable updates from the field, newspapers speculated that the Corps had perished\u2014killed by wildlife, Native attacks, or brutal weather. Only one message reached Washington, D.C., in August 1806, and it carried findings from just the first leg of the trip. That single dispatch underscores how isolated the mission was and how limited communication could be in that era.\\n\\nSo what themes tie all of this together? Inclusive leadership and shared decision-making made the team stronger when conditions were harsh. Indigenous knowledge and acts of diplomacy\u2014especially by women\u2014proved decisive for survival. The expedition traded a romantic myth of a transcontinental waterway for a more accurate, science-based picture of the continent. Because there are so few surviving physical traces, the artifacts, maps, and journals that remain are all the more valuable. And the names on the map, along with the prominence of companions both human and animal, reveal just how human the expedition was\u2014full of grief, affection, and the need to keep morale alive.\\n\\nWhat can we learn from all of this today? Build inclusive teams and empower contributors based on merit; diverse perspectives can be mission-critical. Invest in local knowledge and cultural diplomacy; visible signals of peace, like the presence of women and children, can reduce conflict. Protect your core knowledge assets\u2014journals, maps, and specimens\u2014and plan redundancy for critical data. Prepare for communication blackouts on long missions and manage public expectations accordingly. And if you want to connect with the past firsthand, visit Pompeys Pillar National Monument to see Clark\u2019s 1806 inscription, and request an appointment at the American Philosophical Society to view the original journals. Along the way, verify historical details critically. Transcription errors, like the long-running confusion between \u201cScannon\u201d and \u201cSeaman,\u201d can persist for decades and skew our understanding.\\n\\nThat\u2019s the Lewis and Clark Expedition in a nutshell: a bold journey that exchanged a captivating myth for the harder, deeper truths of science, geography, and human connection\u2014and left us with a legacy you can still see, read, and visit today.&#x27;}</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "yJv2JRM--ws",
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "channel_name": "AI LABS",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 570,
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ]
          },
          "topics_json": [
            "mcp-agents",
            "nextjs-workflow",
            "supabase-backend",
            "shadcn-ui-components",
            "stripe-checkout-integration"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T13:43:43.651388+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.\n\n2) Top 3 insights:\n- Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.\n- Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.\n- ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.\n\n3) Actions/next steps:\n- Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.\n- Draft a PRD, then use converter prompts to generate MCP-specific instructions.\n- Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.\n- Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.\n\n4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.</li>\n<li class=\"mb-2\">Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.</li>\n<li class=\"mb-2\">ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.</li>\n<li class=\"mb-2\">Draft a PRD, then use converter prompts to generate MCP-specific instructions.</li>\n<li class=\"mb-2\">Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.</li>\n<li class=\"mb-2\">Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "VCZV-UXDRzM",
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "channel_name": "NASCompares",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 257,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "subcategories_json": {
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ]
          },
          "topics_json": [
            "nas-shipping-timelines",
            "ultra-cooling-upgrades",
            "cross-format-search-ocr",
            "mobile-app-testing",
            "ifa-2025-updates"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T06:39:08.922419+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.\n\n2) **Top 3 insights:**\n- D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.\n- Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.\n- Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.\n\n3) **Actions/next steps:**\n- For backers: watch for D4/D6 September shipping wave announcements.\n- Track Ultra shipping updates for October\u2013end 2025 window.\n- Try the early mobile app; note missing semantic search and limited system control.\n- Explore consolidated search and knowledge base features to optimize cross-format discovery.\n\n4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.</p>\n<p class=\"mb-4 leading-relaxed\">2) **Top 3 insights:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.</li>\n<li class=\"mb-2\">Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.</li>\n<li class=\"mb-2\">Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) **Actions/next steps:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">For backers: watch for D4/D6 September shipping wave announcements.</li>\n<li class=\"mb-2\">Track Ultra shipping updates for October\u2013end 2025 window.</li>\n<li class=\"mb-2\">Try the early mobile app; note missing semantic search and limited system control.</li>\n<li class=\"mb-2\">Explore consolidated search and knowledge base features to optimize cross-format discovery.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "DqBQuTuOqgY",
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "channel_name": "WorldofAI",
          "published_at": "2025-09-17T00:00:00+00:00",
          "duration_seconds": 543,
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ]
          },
          "topics_json": [
            "glm-4-5-coding-model",
            "claude-code-and-open-code-setu",
            "agentic-coding-and-lsp-feature"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T06:34:00.302974+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: GLM 4.5 is a strong, affordable, open-source coding model accessible via Claude Code or Open Code, offering better reliability and robust agentic coding features.\n\n2) Top 3 insights:\n- Claude Code faces rate limits and reduced context, hurting agentic performance.\n- GLM 4.5 Coding Light plan costs $3/month, 120 prompts per 5 hours, discounted; cheaper, reliable, integrates with coding tools.\n- Open Code offers open-source terminal agent with themable UI, LSP-enabled language awareness, and multi-sessions; often preferable over Claude Code.\n\n3) Actions/next steps:\n- Install Claude Code via npm, open with 'claude', set API key env var, select GLM 4.5 Coding Light model.\n- Alternatively, install Open Code, run 'open code o login', choose provider, then select GLM 4.5 model.\n- Use OpenRouter for free GLM 4.5 Air access via Open Code; note reduced performance versus original.\n- Leverage Open Code features: LSP, multi-sessions, and UI theming for improved coding workflows.\n\n4) Why watch: Learn how to switch to GLM 4.5 for faster, cheaper coding workflows and set it up in Claude Code or Open Code.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: GLM 4.5 is a strong, affordable, open-source coding model accessible via Claude Code or Open Code, offering better reliability and robust agentic coding features.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Claude Code faces rate limits and reduced context, hurting agentic performance.</li>\n<li class=\"mb-2\">GLM 4.5 Coding Light plan costs $3/month, 120 prompts per 5 hours, discounted; cheaper, reliable, integrates with coding tools.</li>\n<li class=\"mb-2\">Open Code offers open-source terminal agent with themable UI, LSP-enabled language awareness, and multi-sessions; often preferable over Claude Code.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Install Claude Code via npm, open with &#x27;claude&#x27;, set API key env var, select GLM 4.5 Coding Light model.</li>\n<li class=\"mb-2\">Alternatively, install Open Code, run &#x27;open code o login&#x27;, choose provider, then select GLM 4.5 model.</li>\n<li class=\"mb-2\">Use OpenRouter for free GLM 4.5 Air access via Open Code; note reduced performance versus original.</li>\n<li class=\"mb-2\">Leverage Open Code features: LSP, multi-sessions, and UI theming for improved coding workflows.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Learn how to switch to GLM 4.5 for faster, cheaper coding workflows and set it up in Claude Code or Open Code.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "sJ7kI13c-ig",
          "id": "yt:sJ7kI13c-ig",
          "title": "GPT-5 Codex V/S Claude Code & GLM Code: Should YOU SWITCH?",
          "channel_name": "AICodeKing",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 497,
          "thumbnail_url": "https://i.ytimg.com/vi/sJ7kI13c-ig/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=sJ7kI13c-ig",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Cost Optimisation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Reviews & Products",
                "subcategories": [
                  "Comparisons & Tests",
                  "Buying Guides"
                ]
              }
            ]
          },
          "topics_json": [
            "gpt-5-codex",
            "claude-code",
            "glm-code",
            "coding-benchmarks",
            "multi-file-repo-edits"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T00:16:25.157435+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: GPT\u20115 Codex improves coding efficiency and output, now second to Codebuff and slightly above Claude Code, but struggles with Godot and complex multi-file changes.\n\n2) Top 3 insights:\n- Claims ~90% fewer tokens with faster, better coding and longer reasoning; integrated across Codeex tools.\n- Benchmarks: solid Expo TMDB app but missing details; excellent Go Bubble Tea TUI; fails Godot/GDScript tasks.\n- Ranks second behind Codebuff, slightly beats Claude Code; fails multi-file repo edits; ChatGPT limits vary 30\u2013150 or 300\u20131,500 messages/5 hours.\n\n3) Actions/next steps:\n- Use GPT\u20115 Codex for general coding and TUIs; avoid Godot/GDScript and complex multi-file refactors.\n- If budget-constrained, prefer GLM Code\u2019s $3 plan; it remains unbeatable value per the reviewer.\n- Test GPT\u20115 Codex on your repo; verify multi-file change handling before switching from Claude Code or Codebuff.\n- Monitor API availability and message limits; current ranges are wide and load-dependent.\n\n4) Why watch: Quick, practical benchmarks comparing GPT\u20115 Codex, Claude Code, Codebuff, and GLM Code with clear strengths, weaknesses, limits, and switching guidance.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: GPT\u20115 Codex improves coding efficiency and output, now second to Codebuff and slightly above Claude Code, but struggles with Godot and complex multi-file changes.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Claims ~90% fewer tokens with faster, better coding and longer reasoning; integrated across Codeex tools.</li>\n<li class=\"mb-2\">Benchmarks: solid Expo TMDB app but missing details; excellent Go Bubble Tea TUI; fails Godot/GDScript tasks.</li>\n<li class=\"mb-2\">Ranks second behind Codebuff, slightly beats Claude Code; fails multi-file repo edits; ChatGPT limits vary 30\u2013150 or 300\u20131,500 messages/5 hours.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Use GPT\u20115 Codex for general coding and TUIs; avoid Godot/GDScript and complex multi-file refactors.</li>\n<li class=\"mb-2\">If budget-constrained, prefer GLM Code\u2019s $3 plan; it remains unbeatable value per the reviewer.</li>\n<li class=\"mb-2\">Test GPT\u20115 Codex on your repo; verify multi-file change handling before switching from Claude Code or Codebuff.</li>\n<li class=\"mb-2\">Monitor API availability and message limits; current ranges are wide and load-dependent.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Quick, practical benchmarks comparing GPT\u20115 Codex, Claude Code, Codebuff, and GLM Code with clear strengths, weaknesses, limits, and switching guidance.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "KRWQTF0iAdM",
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "channel_name": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 857,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "subcategories_json": {
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ]
          },
          "topics_json": [
            "github-tool",
            "ai-coding-assistant",
            "developer-productivity"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T00:05:39.255087+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "{'comprehensive': 'Comprehensive Summary: GitHub\u2019s Free Spec-Driven Workflow for AI-Assisted Coding\\n\\nBig Idea and Context\\n- The video introduces a free, GitHub-backed system (often referred to as \u201cSpec Kit\u201d or \u201cspecit\u201d) that turns AI tools like Cursor, Claude/Cloud Code, or the Gemini CLI into a structured, production-grade development workflow in about 15 minutes.\\n- It addresses the core failure mode of AI coding\u2014lack of structured context\u2014by enforcing a spec-first, layered process that preserves intent, prevents architecture mistakes, and yields consistent, correct-by-design code.\\n\\nCore Problem: AI Coding Chaos\\n- \u201cVibe coding\u201d (ad hoc prompting) loses context between sessions, creates conflicting patterns, and inflates ambiguity into sprawling, fragile code.\\n- Ambiguous requirements force rework and refactoring; without a shared source of truth, front-end and back-end drift apart.\\n\\nSolution: Spec-Driven Development\\n- Philosophy:\\n  - Plan in layers before building; write down decisions and make them explicit.\\n  - Use specifications as the single source of truth to align implementation with intent.\\n- Three Phases:\\n  1) Specify: Capture what and why at a high level, surface ambiguity, and resolve it.\\n  2) Plan: Turn requirements into a concrete implementation plan, guided by chosen tech.\\n  3) Tasks: Generate precise, context-rich tasks with a hidden prompt structure that improves execution quality.\\n\\nHow It Works (End-to-End)\\n- Setup and Initialization:\\n  - Install UV (cross-platform options; Homebrew available on macOS).\\n  - Initialize in your project directory via the repo\u2019s command.\\n  - Choose an AI assistant (e.g., Claude/Cloud Code) and scripting language (e.g., Bash).\\n  - The tool scaffolds:\\n    - A \u201cspecify\u201d directory\\n    - Slash-commands for your assistant\\n    - Templates and scripts for each phase\\n    - A persistent project memory store\\n  - Effect: You gain a \u201cjunior architect\u201d that enforces structure and retains context across sessions; all commands run through your chosen assistant.\\n\\n- Phase 1: Specify (Requirements and Clarifications)\\n  - You describe the feature at a high level, then the tool generates spec.markdown with \u201cneeds clarification\u201d prompts.\\n  - Example feature: Version history for prompt changes with a side-by-side, Git-style diff.\\n  - Clarifications include:\\n    - Can users revert to previous versions?\\n    - How to handle deleted prompts and their versions?\\n    - Any collaboration or concurrent editing?\\n    - Retention limits and storage duration?\\n  - Outcome: A precise, testable spec that becomes the source of truth and prevents rework.\\n\\n- Phase 2: Plan (Implementation Blueprint)\\n  - You declare your stack (e.g., Supabase, Next.js) and constraints.\\n  - Outputs:\\n    - Implementation Plan: Integrations, file placement, and sequencing.\\n    - Research Document: Trade-offs, alternatives, and architectural rationale for explainability and future maintenance.\\n    - Data Model: Entities and relationships (e.g., versions, prompts, users).\\n    - API Contract: Endpoints, parameters, and responses\u2014front end\u2019s source of truth aligned with the back end.\\n    - Quick Start Guide: Ensures consistent, repeatable implementation.\\n  - Value: Prevents \u201ccoding into a corner,\u201d aligns team members, and preserves momentum.\\n\\n- Phase 3: Tasks (Execution With Context)\\n  - The tool reads the plan, data model, API contract, and guides to generate a phased, precise task list.\\n  - Tasks include file locations, interactions, and data sources, tying execution directly to design decisions.\\n  - Outcome: Cohesive implementation with fewer contradictions and rewrites; the hidden prompt structure improves quality and consistency.\\n\\nDemo Result and Outcomes\\n- Delivered a working version history feature that compares versions (e.g., v1 vs v4) with a Git-style diff.\\n- Achieved fast development despite added rigor; tests passed and implementation was correct on the first pass.\\n- Preserved context enables rapid follow-on features; artifacts are reusable across future work.\\n\\nWhy It Works: Key Principles\\n- Structured context eliminates drift and model reinterpretation across sessions.\\n- Clarifying ambiguity early has disproportionate ROI versus late refactoring.\\n- Planning artifacts (research, data model, API contract) prevent architectural mistakes and decouple front-end/back-end.\\n- Generating tasks from the plan keeps execution aligned, avoiding fragmented to-do lists.\\n- Mirrors professional engineering practices that scale and prevent architecture disasters.\\n\\nActionable Workflow\\n1) Install UV and initialize the Spec Kit in your project.\\n2) Select your AI assistant and scripting language; confirm commands run through your assistant.\\n3) Specify:\\n   - Describe the feature at a high level (what/why).\\n   - Resolve all \u201cneeds clarification\u201d prompts until the spec is testable.\\n4) Plan:\\n   - Declare tech stack and constraints.\\n   - Review and refine the plan, research, data model, API contract, and quick start guide.\\n   - Treat the API contract as the front end\u2019s source of truth.\\n5) Tasks:\\n   - Generate tasks directly from the artifacts.\\n   - Execute tasks in phases; rely on the persistent memory for context continuity.\\n6) Implement and test:\\n   - Follow the plan to avoid backtracking; iterate as needed while keeping the spec and contract authoritative.\\n\\nKey Takeaways\\n- The fastest way to build with AI is to slow down briefly: specify, plan, then code.\\n- Specs and API contracts are the backbone for consistency, scale, and team alignment.\\n- Context persistence across sessions turns AI tools into reliable collaborators rather than code generators.\\n- Spec-driven development yields \u201czero ambiguity,\u201d avoids costly rewrites, and gets production-ready code on the first pass.', 'bullet_points': '- What it is: A free, GitHub-backed Spec Kit (\u201cspecit\u201d) that turns AI tools (Cursor, Claude/Cloud Code, Gemini CLI) into a production-grade, spec-driven workflow in ~15 minutes, acting like a persistent-context junior architect.\\n- Problem it solves: Ad hoc \u201cvibe coding\u201d loses context, creates conflicting patterns and ambiguity, and leads to fragile code and front/back-end drift.\\n- Core philosophy: Plan in layers and write decisions down; use a single source of truth (the spec) to align implementation with intent.\\n- Three-phase flow: Specify (clarify what/why), Plan (implementation blueprint and rationale), Tasks (precise, context-rich execution prompts).\\n- Setup: Install UV, initialize in your repo, choose an AI assistant and scripting language; the tool scaffolds directories, slash-commands, templates/scripts, and a persistent memory store.\\n- Specify outputs: spec.markdown with targeted clarifications (e.g., revert behavior, deleted items, concurrency, retention) producing a precise, testable spec that prevents rework.\\n- Plan outputs: Implementation plan, research/trade-offs, data model, API contract, and quick-start guide\u2014aligning front end and back end and avoiding \u201ccoding into a corner.\u201d\\n- Tasks outputs: Phased task list tied to the plan/data/API with file paths and interactions\u2014driving cohesive implementation and higher-quality AI execution.\\n- Demo outcome: Delivered version history with Git-style diffs (e.g., v1 vs v4), passed tests, and shipped correctly on the first pass; artifacts accelerate follow-on features.\\n- Why it works: Structured context across sessions, early ambiguity resolution, and plan-derived tasks mirror professional engineering and prevent architectural mistakes.\\n- Actionable workflow: Install/init; pick assistant/language; Specify until the spec is testable; Plan stack/constraints and finalize artifacts (API contract = FE truth); Generate Tasks and execute in phases; implement and test while keeping spec/contract authoritative.'}",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">{&#x27;comprehensive&#x27;: &#x27;Comprehensive Summary: GitHub\u2019s Free Spec-Driven Workflow for AI-Assisted Coding\\n\\nBig Idea and Context\\n- The video introduces a free, GitHub-backed system (often referred to as \u201cSpec Kit\u201d or \u201cspecit\u201d) that turns AI tools like Cursor, Claude/Cloud Code, or the Gemini CLI into a structured, production-grade development workflow in about 15 minutes.\\n- It addresses the core failure mode of AI coding\u2014lack of structured context\u2014by enforcing a spec-first, layered process that preserves intent, prevents architecture mistakes, and yields consistent, correct-by-design code.\\n\\nCore Problem: AI Coding Chaos\\n- \u201cVibe coding\u201d (ad hoc prompting) loses context between sessions, creates conflicting patterns, and inflates ambiguity into sprawling, fragile code.\\n- Ambiguous requirements force rework and refactoring; without a shared source of truth, front-end and back-end drift apart.\\n\\nSolution: Spec-Driven Development\\n- Philosophy:\\n  - Plan in layers before building; write down decisions and make them explicit.\\n  - Use specifications as the single source of truth to align implementation with intent.\\n- Three Phases:\\n  1) Specify: Capture what and why at a high level, surface ambiguity, and resolve it.\\n  2) Plan: Turn requirements into a concrete implementation plan, guided by chosen tech.\\n  3) Tasks: Generate precise, context-rich tasks with a hidden prompt structure that improves execution quality.\\n\\nHow It Works (End-to-End)\\n- Setup and Initialization:\\n  - Install UV (cross-platform options; Homebrew available on macOS).\\n  - Initialize in your project directory via the repo\u2019s command.\\n  - Choose an AI assistant (e.g., Claude/Cloud Code) and scripting language (e.g., Bash).\\n  - The tool scaffolds:\\n    - A \u201cspecify\u201d directory\\n    - Slash-commands for your assistant\\n    - Templates and scripts for each phase\\n    - A persistent project memory store\\n  - Effect: You gain a \u201cjunior architect\u201d that enforces structure and retains context across sessions; all commands run through your chosen assistant.\\n\\n- Phase 1: Specify (Requirements and Clarifications)\\n  - You describe the feature at a high level, then the tool generates spec.markdown with \u201cneeds clarification\u201d prompts.\\n  - Example feature: Version history for prompt changes with a side-by-side, Git-style diff.\\n  - Clarifications include:\\n    - Can users revert to previous versions?\\n    - How to handle deleted prompts and their versions?\\n    - Any collaboration or concurrent editing?\\n    - Retention limits and storage duration?\\n  - Outcome: A precise, testable spec that becomes the source of truth and prevents rework.\\n\\n- Phase 2: Plan (Implementation Blueprint)\\n  - You declare your stack (e.g., Supabase, Next.js) and constraints.\\n  - Outputs:\\n    - Implementation Plan: Integrations, file placement, and sequencing.\\n    - Research Document: Trade-offs, alternatives, and architectural rationale for explainability and future maintenance.\\n    - Data Model: Entities and relationships (e.g., versions, prompts, users).\\n    - API Contract: Endpoints, parameters, and responses\u2014front end\u2019s source of truth aligned with the back end.\\n    - Quick Start Guide: Ensures consistent, repeatable implementation.\\n  - Value: Prevents \u201ccoding into a corner,\u201d aligns team members, and preserves momentum.\\n\\n- Phase 3: Tasks (Execution With Context)\\n  - The tool reads the plan, data model, API contract, and guides to generate a phased, precise task list.\\n  - Tasks include file locations, interactions, and data sources, tying execution directly to design decisions.\\n  - Outcome: Cohesive implementation with fewer contradictions and rewrites; the hidden prompt structure improves quality and consistency.\\n\\nDemo Result and Outcomes\\n- Delivered a working version history feature that compares versions (e.g., v1 vs v4) with a Git-style diff.\\n- Achieved fast development despite added rigor; tests passed and implementation was correct on the first pass.\\n- Preserved context enables rapid follow-on features; artifacts are reusable across future work.\\n\\nWhy It Works: Key Principles\\n- Structured context eliminates drift and model reinterpretation across sessions.\\n- Clarifying ambiguity early has disproportionate ROI versus late refactoring.\\n- Planning artifacts (research, data model, API contract) prevent architectural mistakes and decouple front-end/back-end.\\n- Generating tasks from the plan keeps execution aligned, avoiding fragmented to-do lists.\\n- Mirrors professional engineering practices that scale and prevent architecture disasters.\\n\\nActionable Workflow\\n1) Install UV and initialize the Spec Kit in your project.\\n2) Select your AI assistant and scripting language; confirm commands run through your assistant.\\n3) Specify:\\n   - Describe the feature at a high level (what/why).\\n   - Resolve all \u201cneeds clarification\u201d prompts until the spec is testable.\\n4) Plan:\\n   - Declare tech stack and constraints.\\n   - Review and refine the plan, research, data model, API contract, and quick start guide.\\n   - Treat the API contract as the front end\u2019s source of truth.\\n5) Tasks:\\n   - Generate tasks directly from the artifacts.\\n   - Execute tasks in phases; rely on the persistent memory for context continuity.\\n6) Implement and test:\\n   - Follow the plan to avoid backtracking; iterate as needed while keeping the spec and contract authoritative.\\n\\nKey Takeaways\\n- The fastest way to build with AI is to slow down briefly: specify, plan, then code.\\n- Specs and API contracts are the backbone for consistency, scale, and team alignment.\\n- Context persistence across sessions turns AI tools into reliable collaborators rather than code generators.\\n- Spec-driven development yields \u201czero ambiguity,\u201d avoids costly rewrites, and gets production-ready code on the first pass.&#x27;, &#x27;bullet_points&#x27;: &#x27;- What it is: A free, GitHub-backed Spec Kit (\u201cspecit\u201d) that turns AI tools (Cursor, Claude/Cloud Code, Gemini CLI) into a production-grade, spec-driven workflow in ~15 minutes, acting like a persistent-context junior architect.\\n- Problem it solves: Ad hoc \u201cvibe coding\u201d loses context, creates conflicting patterns and ambiguity, and leads to fragile code and front/back-end drift.\\n- Core philosophy: Plan in layers and write decisions down; use a single source of truth (the spec) to align implementation with intent.\\n- Three-phase flow: Specify (clarify what/why), Plan (implementation blueprint and rationale), Tasks (precise, context-rich execution prompts).\\n- Setup: Install UV, initialize in your repo, choose an AI assistant and scripting language; the tool scaffolds directories, slash-commands, templates/scripts, and a persistent memory store.\\n- Specify outputs: spec.markdown with targeted clarifications (e.g., revert behavior, deleted items, concurrency, retention) producing a precise, testable spec that prevents rework.\\n- Plan outputs: Implementation plan, research/trade-offs, data model, API contract, and quick-start guide\u2014aligning front end and back end and avoiding \u201ccoding into a corner.\u201d\\n- Tasks outputs: Phased task list tied to the plan/data/API with file paths and interactions\u2014driving cohesive implementation and higher-quality AI execution.\\n- Demo outcome: Delivered version history with Git-style diffs (e.g., v1 vs v4), passed tests, and shipped correctly on the first pass; artifacts accelerate follow-on features.\\n- Why it works: Structured context across sessions, early ambiguity resolution, and plan-derived tasks mirror professional engineering and prevent architectural mistakes.\\n- Actionable workflow: Install/init; pick assistant/language; Specify until the spec is testable; Plan stack/constraints and finalize artifacts (API contract = FE truth); Generate Tasks and execute in phases; implement and test while keeping spec/contract authoritative.&#x27;}</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "RRyXQX33KXY",
          "id": "yt:RRyXQX33KXY",
          "title": "Cross-Plane vs Flat-Plane - Which V8 Engine Is Best?",
          "channel_name": "Engineering Explained",
          "published_at": "2025-06-13T00:00:00+00:00",
          "duration_seconds": 65,
          "thumbnail_url": "https://i.ytimg.com/vi/RRyXQX33KXY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=RRyXQX33KXY",
          "subcategories_json": {
            "categories": [
              {
                "category": "Hobbies & Special Interests",
                "subcategories": [
                  "Automotive"
                ]
              },
              {
                "category": "Science & Nature",
                "subcategories": [
                  "Physics & Chemistry"
                ]
              }
            ]
          },
          "topics_json": [
            "cross-plane-v8",
            "flat-plane-v8",
            "crankshaft-balance",
            "engine-sound"
          ],
          "analysis_json": null,
          "has_audio": true,
          "indexed_at": "2025-09-16T21:15:20.790263+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Cross-plane versus flat-plane: two ways to build a V8, two very different personalities. The core trade-off is smoothness versus speed. Cross-plane designs run smoother, while flat-plane designs rev higher and sound sharper.\n\nFirst, let\u2019s look at the hardware. In a cross-plane V8, the crank pins are set 90 degrees apart, forming a plus-sign shape when viewed from the side. In a flat-plane V8, the pins are 180 degrees apart, lining up on a single plane.\n\nMoving on to performance, cross-plane cranks are better balanced and deliver a calmer, smoother feel. The downside is weight. That heavier crankshaft resists quick acceleration and limits how high the engine can rev.\n\nFlat-plane cranks flip the script. They\u2019re lighter, so the engine spins up quickly and can reach higher redlines. You\u2019ll get more vibration, though, because the balance isn\u2019t as inherently smooth. The firing order also alternates bank to bank in a clean left-right rhythm, which helps breathing and gives a distinct character.\n\nSound is a big differentiator. Cross-plane V8s produce that classic burbling rumble. Flat-plane V8s have a sharper, higher-pitched wail that rises cleanly with revs.\n\nSo what\u2019s the bottom line? If you value silky smoothness and that traditional V8 throb, cross-plane is the pick. If you want a lighter, freer-revving engine with a razor-edged soundtrack and rapid response, go flat-plane. Choose the vibe you want: comfort and rumble, or intensity and scream.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Cross-plane versus flat-plane: two ways to build a V8, two very different personalities. The core trade-off is smoothness versus speed. Cross-plane designs run smoother, while flat-plane designs rev higher and sound sharper.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s look at the hardware. In a cross-plane V8, the crank pins are set 90 degrees apart, forming a plus-sign shape when viewed from the side. In a flat-plane V8, the pins are 180 degrees apart, lining up on a single plane.</p>\n<p class=\"mb-4 leading-relaxed\">Moving on to performance, cross-plane cranks are better balanced and deliver a calmer, smoother feel. The downside is weight. That heavier crankshaft resists quick acceleration and limits how high the engine can rev.</p>\n<p class=\"mb-4 leading-relaxed\">Flat-plane cranks flip the script. They\u2019re lighter, so the engine spins up quickly and can reach higher redlines. You\u2019ll get more vibration, though, because the balance isn\u2019t as inherently smooth. The firing order also alternates bank to bank in a clean left-right rhythm, which helps breathing and gives a distinct character.</p>\n<p class=\"mb-4 leading-relaxed\">Sound is a big differentiator. Cross-plane V8s produce that classic burbling rumble. Flat-plane V8s have a sharper, higher-pitched wail that rises cleanly with revs.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? If you value silky smoothness and that traditional V8 throb, cross-plane is the pick. If you want a lighter, freer-revving engine with a razor-edged soundtrack and rapid response, go flat-plane. Choose the vibe you want: comfort and rumble, or intensity and scream.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "QKnYTlZcbgg",
          "id": "yt:QKnYTlZcbgg",
          "title": "Volvo Dropped New Cars From A Crane (To Save Lives)",
          "channel_name": "Engineering Explained",
          "published_at": "2025-02-21T00:00:00+00:00",
          "duration_seconds": 55,
          "thumbnail_url": "https://i.ytimg.com/vi/QKnYTlZcbgg/hq720_2.jpg?sqp=-oaymwEoCIAKENAF8quKqQMcGADwAQH4AbYIgAKAD4oCDAgAEAEYSiBYKGUwDw==&rs=AOn4CLD2bCQCNQFF86RMb-lpsvSMBhxa8Q",
          "canonical_url": "https://www.youtube.com/watch?v=QKnYTlZcbgg",
          "subcategories_json": {
            "categories": [
              {
                "category": "Hobbies & Special Interests",
                "subcategories": [
                  "Automotive"
                ]
              },
              {
                "category": "Education",
                "subcategories": [
                  "Teaching Methods"
                ]
              }
            ]
          },
          "topics_json": [
            "volvo-crane-drop",
            "realistic-crash-simulation",
            "emergency-extrication-training"
          ],
          "analysis_json": null,
          "has_audio": true,
          "indexed_at": "2025-09-16T04:09:46.615485+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Volvo dropped brand\u2011new cars from a crane, about 30 meters up, to create brutally realistic crash damage. The point was to give rescue teams wrecks that mimic severe, real\u2011world collisions so they can practice cutting people out faster and more safely. It also happens to make for spectacular slow\u2011motion footage, but the life\u2011saving angle is real.\n\nFirst, the impact. A 30\u2011meter drop translates to an impact speed of over 80 kilometers per hour, roughly 50 miles per hour, which crushes structures far beyond standard test scenarios. Think of it as recreating the kind of catastrophic deformation you see in high\u2011energy crashes, the sort that challenge even seasoned first responders.\n\nMoving on to why this matters, extreme deformation forces rescue crews to work through the toughest possible extrications. They can run their hydraulic cutters and spreaders, refine stabilization techniques, and practice safe access paths on modern vehicle structures, all under realistic stress. That practice tightens procedures and can shave precious minutes when seconds count.\n\nHowever, there\u2019s an obvious trade\u2011off. It\u2019s a huge spectacle\u2014picture six giraffes\u2019 worth of height and a lion\u2019s sprint for speed\u2014and it doubles as memorable marketing. Still, if the outcome is better\u2011trained teams and faster rescues, the theatrics serve a purpose.\n\nSo what\u2019s the bottom line? Dropping cars from roughly 30 meters creates the kind of mangled vehicles that push rescue training to the edge, and that can save lives. The spectacle is undeniable, but the practical payoff\u2014quicker, safer extrications in the real world\u2014makes the cost of a few sacrificed cars look like a smart trade.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Volvo dropped brand\u2011new cars from a crane, about 30 meters up, to create brutally realistic crash damage. The point was to give rescue teams wrecks that mimic severe, real\u2011world collisions so they can practice cutting people out faster and more safely. It also happens to make for spectacular slow\u2011motion footage, but the life\u2011saving angle is real.</p>\n<p class=\"mb-4 leading-relaxed\">First, the impact. A 30\u2011meter drop translates to an impact speed of over 80 kilometers per hour, roughly 50 miles per hour, which crushes structures far beyond standard test scenarios. Think of it as recreating the kind of catastrophic deformation you see in high\u2011energy crashes, the sort that challenge even seasoned first responders.</p>\n<p class=\"mb-4 leading-relaxed\">Moving on to why this matters, extreme deformation forces rescue crews to work through the toughest possible extrications. They can run their hydraulic cutters and spreaders, refine stabilization techniques, and practice safe access paths on modern vehicle structures, all under realistic stress. That practice tightens procedures and can shave precious minutes when seconds count.</p>\n<p class=\"mb-4 leading-relaxed\">However, there\u2019s an obvious trade\u2011off. It\u2019s a huge spectacle\u2014picture six giraffes\u2019 worth of height and a lion\u2019s sprint for speed\u2014and it doubles as memorable marketing. Still, if the outcome is better\u2011trained teams and faster rescues, the theatrics serve a purpose.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? Dropping cars from roughly 30 meters creates the kind of mangled vehicles that push rescue training to the edge, and that can save lives. The spectacle is undeniable, but the practical payoff\u2014quicker, safer extrications in the real world\u2014makes the cost of a few sacrificed cars look like a smart trade.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "QjCPGuUQrXo",
          "id": "yt:QjCPGuUQrXo",
          "title": "This New Paint Keeps Your Car Cool!",
          "channel_name": "Engineering Explained",
          "published_at": "2025-05-02T00:00:00+00:00",
          "duration_seconds": 73,
          "thumbnail_url": "https://i.ytimg.com/vi/QjCPGuUQrXo/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=QjCPGuUQrXo",
          "subcategories_json": null,
          "topics_json": {
            "raw_text": "thermal-metamaterials, passive-radiative-cooling, automotive-heat-reduction"
          },
          "analysis_json": null,
          "has_audio": true,
          "indexed_at": "2025-09-16T03:37:51.901351+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Nissan has a new automotive paint that actively keeps a car cooler under the sun. In direct testing, it dropped exterior surface temperatures by twelve degrees Celsius and brought cabin temperatures down by five degrees, compared with an identical car using conventional paint.\n\nFirst, let\u2019s look at the physics of why normal paint heats up. Sunlight hits the surface, the paint molecules vibrate, and that vibration turns into heat. That\u2019s why dark body panels can feel scorching even on a mild day.\n\nNow, what makes this new coating different is a pair of specialized particles mixed into the paint. One set reflects near\u2011infrared light, which is the slice of sunlight most responsible for heating surfaces. By bouncing that energy away, the paint avoids a big chunk of the heat load before it even starts.\n\nThe second particle is the clever part. When surrounding paint warms up, it creates a temporary charge imbalance on these particles. To return to a stable state, the charges move, and that motion emits electromagnetic waves that radiate away from the car\u2019s surface. In plain English, the paint turns some of its heat into radiation that escapes into the sky, a passive process known as radiative cooling.\n\nAs for performance results, two identically colored cars were parked side by side in strong sun. The car with the new coating ran twelve degrees Celsius cooler on the exterior and five degrees cooler inside. That\u2019s the difference between \u201ctoo hot to touch\u201d and \u201cwarm but manageable,\u201d and it can ease the burden on air conditioning.\n\nThere\u2019s even a name for it: thermal metamaterial passive radiative cooling. It\u2019s a mouthful, but it captures the idea\u2014using engineered materials to passively shed heat as radiation while reflecting the most heating\u2011intense parts of sunlight.\n\nSo what\u2019s the bottom line? This paint meaningfully reduces how much heat a car absorbs and helps the cabin stay cooler without extra power or moving parts. If it reaches production with durable finishes and reasonable color options, it could be a practical way to cut interior heat soak and reduce air\u2011conditioning use, especially in hot climates.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Nissan has a new automotive paint that actively keeps a car cooler under the sun. In direct testing, it dropped exterior surface temperatures by twelve degrees Celsius and brought cabin temperatures down by five degrees, compared with an identical car using conventional paint.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s look at the physics of why normal paint heats up. Sunlight hits the surface, the paint molecules vibrate, and that vibration turns into heat. That\u2019s why dark body panels can feel scorching even on a mild day.</p>\n<p class=\"mb-4 leading-relaxed\">Now, what makes this new coating different is a pair of specialized particles mixed into the paint. One set reflects near\u2011infrared light, which is the slice of sunlight most responsible for heating surfaces. By bouncing that energy away, the paint avoids a big chunk of the heat load before it even starts.</p>\n<p class=\"mb-4 leading-relaxed\">The second particle is the clever part. When surrounding paint warms up, it creates a temporary charge imbalance on these particles. To return to a stable state, the charges move, and that motion emits electromagnetic waves that radiate away from the car\u2019s surface. In plain English, the paint turns some of its heat into radiation that escapes into the sky, a passive process known as radiative cooling.</p>\n<p class=\"mb-4 leading-relaxed\">As for performance results, two identically colored cars were parked side by side in strong sun. The car with the new coating ran twelve degrees Celsius cooler on the exterior and five degrees cooler inside. That\u2019s the difference between \u201ctoo hot to touch\u201d and \u201cwarm but manageable,\u201d and it can ease the burden on air conditioning.</p>\n<p class=\"mb-4 leading-relaxed\">There\u2019s even a name for it: thermal metamaterial passive radiative cooling. It\u2019s a mouthful, but it captures the idea\u2014using engineered materials to passively shed heat as radiation while reflecting the most heating\u2011intense parts of sunlight.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? This paint meaningfully reduces how much heat a car absorbs and helps the cabin stay cooler without extra power or moving parts. If it reaches production with durable finishes and reasonable color options, it could be a practical way to cut interior heat soak and reduce air\u2011conditioning use, especially in hot climates.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "vF8FWmzRd5M",
          "id": "yt:vF8FWmzRd5M",
          "title": "TARS Agent: Powerful AI Operating System Can Automate ALL Computer Tasks! (Opensource)",
          "channel_name": "WorldofAI",
          "published_at": "2025-09-15T00:00:00+00:00",
          "duration_seconds": 485,
          "thumbnail_url": "https://i.ytimg.com/vi/vF8FWmzRd5M/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=vF8FWmzRd5M",
          "subcategories_json": null,
          "topics_json": {
            "raw_text": "ai-agents, model-context-protocol, computer-use-automation, multimodal-models, desktop-control"
          },
          "analysis_json": null,
          "has_audio": true,
          "indexed_at": "2025-09-15T23:57:27.658746+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Agent TARS is an open\u2011source, multimodal Artificial Intelligence agent stack that behaves like a practical, humanlike assistant across your terminal, browser, and desktop. It ships with both a command\u2011line interface and a web interface, and it\u2019s licensed under Apache 2.0, so you can use it freely and build on it. The key takeaway is simple: this stack can actually complete end\u2011to\u2011end tasks, from browsing and data analysis to app and system control, not just chat.\n\nFirst, let\u2019s look at what it actually is. Agent TARS is the core stack that brings a graphical agent plus vision into your workflow. It integrates with Model Context Protocol servers, so it can pull in specialized tools for charts, maps, and other visualizations. You can run it in the terminal or access a local web app, and it\u2019s designed to operate across real\u2011world workflows rather than single\u2011step prompts.\n\nWhen it comes to real task execution, the standout is autonomous, multi\u2011step action. Given a prompt like \u201cbook the earliest flight from San Jose to New York on September 1st and the last return on September 6th using Priceline,\u201d it handles the search, selection, and confirmations on its own. In lighter tasks, it can browse for the top five Product Hunt projects, summarize a YouTube channel, and write a report. Beyond the browser, it can execute terminal commands\u2014say, installing packages\u2014so research, scripting, and system changes can flow in one place. With MCP integrations, it can render charts or maps by connecting a chart server in the config, turning raw data into readable visuals.\n\nMoving on to the desktop side, UI TARS is a native app built on the same stack that effectively functions like an AI operating system. It includes specialized browser and system operators to control local apps, remote machines, and your browser with multimodal models. It\u2019s powered by the UI TARS framework and the 1.5 and 1.6 multimodal model series, and you can select the UI TARS 1.5 7B model directly in the app. In practice, that means it can take a task like collecting Nvidia\u2019s stock price, generate a Python script to process the data, and produce a research report\u2014executing steps across your computer and the web.\n\nSetup is straightforward. For Agent TARS, install Node.js, then launch with an npx command and point it to your preferred model provider. An OpenAI key works, and there\u2019s a recommendation to use Bolt Engine as an option. The web interface runs on localhost for a more visual experience. For UI TARS, follow the quick\u2011start for macOS, Linux, or Windows; it currently works best on macOS, and it requires the base model to enable the computer\u2011use operating mode.\n\nThere are a few trade\u2011offs to keep in mind. The desktop agent is macOS\u2011first right now, with Linux and Windows support available but not yet the strongest experience. You\u2019ll also need Node for the core stack and a compatible model setup, and UI TARS requires its base model to unlock full desktop control. The upside is that both tools are actively updated and designed to be extensible, especially through MCP.\n\nSo what\u2019s the bottom line? As an Apache 2.0 open\u2011source stack, Agent TARS and UI TARS deliver a lot of capability for zero licensing cost, making the value proposition compelling if you\u2019re willing to handle a bit of setup. Expect your only potential expense to be model API usage, depending on your provider. If you want a fast, low\u2011friction start, spin up Agent TARS with npx and explore the web UI. If you need full computer control and you\u2019re on macOS, install UI TARS, select the 1.5 7B model, and use the computer\u2011use mode for end\u2011to\u2011end automation. For developers and power users, the cost\u2011benefit is excellent: powerful automation across apps, browsers, and the system, without paying for a commercial license.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Agent TARS is an open\u2011source, multimodal Artificial Intelligence agent stack that behaves like a practical, humanlike assistant across your terminal, browser, and desktop. It ships with both a command\u2011line interface and a web interface, and it\u2019s licensed under Apache 2.0, so you can use it freely and build on it. The key takeaway is simple: this stack can actually complete end\u2011to\u2011end tasks, from browsing and data analysis to app and system control, not just chat.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s look at what it actually is. Agent TARS is the core stack that brings a graphical agent plus vision into your workflow. It integrates with Model Context Protocol servers, so it can pull in specialized tools for charts, maps, and other visualizations. You can run it in the terminal or access a local web app, and it\u2019s designed to operate across real\u2011world workflows rather than single\u2011step prompts.</p>\n<p class=\"mb-4 leading-relaxed\">When it comes to real task execution, the standout is autonomous, multi\u2011step action. Given a prompt like \u201cbook the earliest flight from San Jose to New York on September 1st and the last return on September 6th using Priceline,\u201d it handles the search, selection, and confirmations on its own. In lighter tasks, it can browse for the top five Product Hunt projects, summarize a YouTube channel, and write a report. Beyond the browser, it can execute terminal commands\u2014say, installing packages\u2014so research, scripting, and system changes can flow in one place. With MCP integrations, it can render charts or maps by connecting a chart server in the config, turning raw data into readable visuals.</p>\n<p class=\"mb-4 leading-relaxed\">Moving on to the desktop side, UI TARS is a native app built on the same stack that effectively functions like an AI operating system. It includes specialized browser and system operators to control local apps, remote machines, and your browser with multimodal models. It\u2019s powered by the UI TARS framework and the 1.5 and 1.6 multimodal model series, and you can select the UI TARS 1.5 7B model directly in the app. In practice, that means it can take a task like collecting Nvidia\u2019s stock price, generate a Python script to process the data, and produce a research report\u2014executing steps across your computer and the web.</p>\n<p class=\"mb-4 leading-relaxed\">Setup is straightforward. For Agent TARS, install Node.js, then launch with an npx command and point it to your preferred model provider. An OpenAI key works, and there\u2019s a recommendation to use Bolt Engine as an option. The web interface runs on localhost for a more visual experience. For UI TARS, follow the quick\u2011start for macOS, Linux, or Windows; it currently works best on macOS, and it requires the base model to enable the computer\u2011use operating mode.</p>\n<p class=\"mb-4 leading-relaxed\">There are a few trade\u2011offs to keep in mind. The desktop agent is macOS\u2011first right now, with Linux and Windows support available but not yet the strongest experience. You\u2019ll also need Node for the core stack and a compatible model setup, and UI TARS requires its base model to unlock full desktop control. The upside is that both tools are actively updated and designed to be extensible, especially through MCP.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? As an Apache 2.0 open\u2011source stack, Agent TARS and UI TARS deliver a lot of capability for zero licensing cost, making the value proposition compelling if you\u2019re willing to handle a bit of setup. Expect your only potential expense to be model API usage, depending on your provider. If you want a fast, low\u2011friction start, spin up Agent TARS with npx and explore the web UI. If you need full computer control and you\u2019re on macOS, install UI TARS, select the 1.5 7B model, and use the computer\u2011use mode for end\u2011to\u2011end automation. For developers and power users, the cost\u2011benefit is excellent: powerful automation across apps, browsers, and the system, without paying for a commercial license.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        }
      ],
      "pagination": {
        "page": 1,
        "size": 10,
        "total_count": 81,
        "total_pages": 9,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "timestamp": "2025-09-18T11:21:42.826703",
    "count_comparison": {
      "sqlite": 10,
      "postgres": 10,
      "match": true
    }
  },
  {
    "endpoint": "/api/reports",
    "params": {
      "category": "Technology",
      "size": 3
    },
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "reports": [
        {
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "channel": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 857,
          "analysis": {
            "category": [
              "Technology"
            ],
            "subcategory": "Tech News & Trends",
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "github-tool",
              "ai-coding-assistant",
              "developer-productivity"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 15051
          },
          "media_metadata": {
            "video_duration_seconds": 857,
            "mp3_duration_seconds": 0
          },
          "file_stem": "KRWQTF0iAdM",
          "video_id": "KRWQTF0iAdM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T00:05:39.255087",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 2788
        },
        {
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "channel": "NASCompares",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 257,
          "analysis": {
            "category": [
              "Computer Hardware",
              "Technology"
            ],
            "subcategory": "Networking & NAS",
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ],
            "content_type": "News",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "nas-shipping-timelines",
              "ultra-cooling-upgrades",
              "cross-format-search-ocr",
              "mobile-app-testing",
              "ifa-2025-updates"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 4737
          },
          "media_metadata": {
            "video_duration_seconds": 257,
            "mp3_duration_seconds": 0
          },
          "file_stem": "VCZV-UXDRzM",
          "video_id": "VCZV-UXDRzM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Computer Hardware\", \"subcategories\": [\"Networking & NAS\", \"Cooling & Thermals\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\"]}]}",
          "indexed_at": "2025-09-17T06:39:08.922419",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 896
        },
        {
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "channel": "AI LABS",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 570,
          "analysis": {
            "category": [
              "AI Software Development",
              "Technology"
            ],
            "subcategory": "Agents & MCP/Orchestration",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "mcp-agents",
              "nextjs-workflow",
              "supabase-backend",
              "shadcn-ui-components",
              "stripe-checkout-integration"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 10388
          },
          "media_metadata": {
            "video_duration_seconds": 570,
            "mp3_duration_seconds": 0
          },
          "file_stem": "yJv2JRM--ws",
          "video_id": "yJv2JRM--ws",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}, {\"category\": \"Technology\", \"subcategories\": [\"Web Development\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T13:43:43.651388",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1876
        }
      ],
      "pagination": {
        "page": 1,
        "size": 3,
        "total_count": 40,
        "total_pages": 14,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {
        "category": [
          "Technology"
        ]
      },
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "postgres_data": {
      "reports": [
        {
          "video_id": "yJv2JRM--ws",
          "id": "yt:yJv2JRM--ws",
          "title": "This Next JS Agent is INSANE... The Ultimate AI Workflow",
          "channel_name": "AI LABS",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 570,
          "thumbnail_url": "https://i.ytimg.com/vi/yJv2JRM--ws/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=yJv2JRM--ws",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Web Development",
                  "Software Tutorials"
                ]
              }
            ]
          },
          "topics_json": [
            "mcp-agents",
            "nextjs-workflow",
            "supabase-backend",
            "shadcn-ui-components",
            "stripe-checkout-integration"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T13:43:43.651388+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.\n\n2) Top 3 insights:\n- Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.\n- Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.\n- ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.\n\n3) Actions/next steps:\n- Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.\n- Draft a PRD, then use converter prompts to generate MCP-specific instructions.\n- Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.\n- Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.\n\n4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) Core message: Use MCPs with an AI coding agent to automatically build a full Next.js app\u2014backend, frontend, and payments\u2014using Supabase, ShadCN, and Stripe.</p>\n<p class=\"mb-4 leading-relaxed\">2) Top 3 insights:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Connect MCPs via CLI using API keys; verify with /mcp in Claude Code.</li>\n<li class=\"mb-2\">Convert a comprehensive PRD into MCP-specific prompts; the agent generates to-do lists and executes tasks sequentially.</li>\n<li class=\"mb-2\">ShadCN MCP supplies component context; build frontend with ShadCN and theme. Supabase handles backend/auth. Stripe MCP automates payments from mock to live checkout.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) Actions/next steps:</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">Create agent hub folder and connect Supabase, ShadCN, Stripe MCPs with provided commands and API keys; verify connections via /mcp.</li>\n<li class=\"mb-2\">Draft a PRD, then use converter prompts to generate MCP-specific instructions.</li>\n<li class=\"mb-2\">Execute sequentially: Supabase backend project and schema; ShadCN UI build; connect layers; then Stripe mock and live checkout.</li>\n<li class=\"mb-2\">Validate in Supabase auth panel and Stripe dashboard; iterate on UI using ShadCN MCP slash commands.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) Why watch: Shows a practical, repeatable MCP workflow to ship real Next.js apps\u2014auth, UI, and payments\u2014using only prompts inside an AI coding agent.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "VCZV-UXDRzM",
          "id": "yt:VCZV-UXDRzM",
          "title": "Zettlab NAS - UPDATES @ IFA 2025",
          "channel_name": "NASCompares",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 257,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/VCZV-UXDRzM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=VCZV-UXDRzM",
          "subcategories_json": {
            "categories": [
              {
                "category": "Computer Hardware",
                "subcategories": [
                  "Networking & NAS",
                  "Cooling & Thermals"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends"
                ]
              }
            ]
          },
          "topics_json": [
            "nas-shipping-timelines",
            "ultra-cooling-upgrades",
            "cross-format-search-ocr",
            "mobile-app-testing",
            "ifa-2025-updates"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T06:39:08.922419+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.\n\n2) **Top 3 insights:**\n- D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.\n- Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.\n- Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.\n\n3) **Actions/next steps:**\n- For backers: watch for D4/D6 September shipping wave announcements.\n- Track Ultra shipping updates for October\u2013end 2025 window.\n- Try the early mobile app; note missing semantic search and limited system control.\n- Explore consolidated search and knowledge base features to optimize cross-format discovery.\n\n4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">1) **Core message:** Zetlab shares shipping timelines, hardware tweaks, and AI/software updates for its local-AI NAS, including Ultra cooling upgrades and consolidated search/knowledge base features.</p>\n<p class=\"mb-4 leading-relaxed\">2) **Top 3 insights:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">D4/D6 crowdfunding units ship in September waves; Ultra targets later in the year, around October, before end of 2025.</li>\n<li class=\"mb-2\">Ultra hardware updated: improved cooling via new side vents to reduce buildup and enhance air dissipation.</li>\n<li class=\"mb-2\">Software: consolidated cross-format search with OCR/metadata, enhanced knowledge base; mobile app testing ongoing, missing semantic search and broader system controls.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">3) **Actions/next steps:**</p>\n<ul class=\"kp-list list-disc pl-6 space-y-1 mb-4\">\n<li class=\"mb-2\">For backers: watch for D4/D6 September shipping wave announcements.</li>\n<li class=\"mb-2\">Track Ultra shipping updates for October\u2013end 2025 window.</li>\n<li class=\"mb-2\">Try the early mobile app; note missing semantic search and limited system control.</li>\n<li class=\"mb-2\">Explore consolidated search and knowledge base features to optimize cross-format discovery.</li>\n</ul>\n<p class=\"mb-4 leading-relaxed\">4) **Why watch:** Quick briefing on Zetlab NAS timelines, Ultra cooling changes, and tangible AI/software progress shown at IFA 2025.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "KRWQTF0iAdM",
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "channel_name": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00+00:00",
          "duration_seconds": 857,
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "subcategories_json": {
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ]
          },
          "topics_json": [
            "github-tool",
            "ai-coding-assistant",
            "developer-productivity"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-17T00:05:39.255087+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "{'comprehensive': 'Comprehensive Summary: GitHub\u2019s Free Spec-Driven Workflow for AI-Assisted Coding\\n\\nBig Idea and Context\\n- The video introduces a free, GitHub-backed system (often referred to as \u201cSpec Kit\u201d or \u201cspecit\u201d) that turns AI tools like Cursor, Claude/Cloud Code, or the Gemini CLI into a structured, production-grade development workflow in about 15 minutes.\\n- It addresses the core failure mode of AI coding\u2014lack of structured context\u2014by enforcing a spec-first, layered process that preserves intent, prevents architecture mistakes, and yields consistent, correct-by-design code.\\n\\nCore Problem: AI Coding Chaos\\n- \u201cVibe coding\u201d (ad hoc prompting) loses context between sessions, creates conflicting patterns, and inflates ambiguity into sprawling, fragile code.\\n- Ambiguous requirements force rework and refactoring; without a shared source of truth, front-end and back-end drift apart.\\n\\nSolution: Spec-Driven Development\\n- Philosophy:\\n  - Plan in layers before building; write down decisions and make them explicit.\\n  - Use specifications as the single source of truth to align implementation with intent.\\n- Three Phases:\\n  1) Specify: Capture what and why at a high level, surface ambiguity, and resolve it.\\n  2) Plan: Turn requirements into a concrete implementation plan, guided by chosen tech.\\n  3) Tasks: Generate precise, context-rich tasks with a hidden prompt structure that improves execution quality.\\n\\nHow It Works (End-to-End)\\n- Setup and Initialization:\\n  - Install UV (cross-platform options; Homebrew available on macOS).\\n  - Initialize in your project directory via the repo\u2019s command.\\n  - Choose an AI assistant (e.g., Claude/Cloud Code) and scripting language (e.g., Bash).\\n  - The tool scaffolds:\\n    - A \u201cspecify\u201d directory\\n    - Slash-commands for your assistant\\n    - Templates and scripts for each phase\\n    - A persistent project memory store\\n  - Effect: You gain a \u201cjunior architect\u201d that enforces structure and retains context across sessions; all commands run through your chosen assistant.\\n\\n- Phase 1: Specify (Requirements and Clarifications)\\n  - You describe the feature at a high level, then the tool generates spec.markdown with \u201cneeds clarification\u201d prompts.\\n  - Example feature: Version history for prompt changes with a side-by-side, Git-style diff.\\n  - Clarifications include:\\n    - Can users revert to previous versions?\\n    - How to handle deleted prompts and their versions?\\n    - Any collaboration or concurrent editing?\\n    - Retention limits and storage duration?\\n  - Outcome: A precise, testable spec that becomes the source of truth and prevents rework.\\n\\n- Phase 2: Plan (Implementation Blueprint)\\n  - You declare your stack (e.g., Supabase, Next.js) and constraints.\\n  - Outputs:\\n    - Implementation Plan: Integrations, file placement, and sequencing.\\n    - Research Document: Trade-offs, alternatives, and architectural rationale for explainability and future maintenance.\\n    - Data Model: Entities and relationships (e.g., versions, prompts, users).\\n    - API Contract: Endpoints, parameters, and responses\u2014front end\u2019s source of truth aligned with the back end.\\n    - Quick Start Guide: Ensures consistent, repeatable implementation.\\n  - Value: Prevents \u201ccoding into a corner,\u201d aligns team members, and preserves momentum.\\n\\n- Phase 3: Tasks (Execution With Context)\\n  - The tool reads the plan, data model, API contract, and guides to generate a phased, precise task list.\\n  - Tasks include file locations, interactions, and data sources, tying execution directly to design decisions.\\n  - Outcome: Cohesive implementation with fewer contradictions and rewrites; the hidden prompt structure improves quality and consistency.\\n\\nDemo Result and Outcomes\\n- Delivered a working version history feature that compares versions (e.g., v1 vs v4) with a Git-style diff.\\n- Achieved fast development despite added rigor; tests passed and implementation was correct on the first pass.\\n- Preserved context enables rapid follow-on features; artifacts are reusable across future work.\\n\\nWhy It Works: Key Principles\\n- Structured context eliminates drift and model reinterpretation across sessions.\\n- Clarifying ambiguity early has disproportionate ROI versus late refactoring.\\n- Planning artifacts (research, data model, API contract) prevent architectural mistakes and decouple front-end/back-end.\\n- Generating tasks from the plan keeps execution aligned, avoiding fragmented to-do lists.\\n- Mirrors professional engineering practices that scale and prevent architecture disasters.\\n\\nActionable Workflow\\n1) Install UV and initialize the Spec Kit in your project.\\n2) Select your AI assistant and scripting language; confirm commands run through your assistant.\\n3) Specify:\\n   - Describe the feature at a high level (what/why).\\n   - Resolve all \u201cneeds clarification\u201d prompts until the spec is testable.\\n4) Plan:\\n   - Declare tech stack and constraints.\\n   - Review and refine the plan, research, data model, API contract, and quick start guide.\\n   - Treat the API contract as the front end\u2019s source of truth.\\n5) Tasks:\\n   - Generate tasks directly from the artifacts.\\n   - Execute tasks in phases; rely on the persistent memory for context continuity.\\n6) Implement and test:\\n   - Follow the plan to avoid backtracking; iterate as needed while keeping the spec and contract authoritative.\\n\\nKey Takeaways\\n- The fastest way to build with AI is to slow down briefly: specify, plan, then code.\\n- Specs and API contracts are the backbone for consistency, scale, and team alignment.\\n- Context persistence across sessions turns AI tools into reliable collaborators rather than code generators.\\n- Spec-driven development yields \u201czero ambiguity,\u201d avoids costly rewrites, and gets production-ready code on the first pass.', 'bullet_points': '- What it is: A free, GitHub-backed Spec Kit (\u201cspecit\u201d) that turns AI tools (Cursor, Claude/Cloud Code, Gemini CLI) into a production-grade, spec-driven workflow in ~15 minutes, acting like a persistent-context junior architect.\\n- Problem it solves: Ad hoc \u201cvibe coding\u201d loses context, creates conflicting patterns and ambiguity, and leads to fragile code and front/back-end drift.\\n- Core philosophy: Plan in layers and write decisions down; use a single source of truth (the spec) to align implementation with intent.\\n- Three-phase flow: Specify (clarify what/why), Plan (implementation blueprint and rationale), Tasks (precise, context-rich execution prompts).\\n- Setup: Install UV, initialize in your repo, choose an AI assistant and scripting language; the tool scaffolds directories, slash-commands, templates/scripts, and a persistent memory store.\\n- Specify outputs: spec.markdown with targeted clarifications (e.g., revert behavior, deleted items, concurrency, retention) producing a precise, testable spec that prevents rework.\\n- Plan outputs: Implementation plan, research/trade-offs, data model, API contract, and quick-start guide\u2014aligning front end and back end and avoiding \u201ccoding into a corner.\u201d\\n- Tasks outputs: Phased task list tied to the plan/data/API with file paths and interactions\u2014driving cohesive implementation and higher-quality AI execution.\\n- Demo outcome: Delivered version history with Git-style diffs (e.g., v1 vs v4), passed tests, and shipped correctly on the first pass; artifacts accelerate follow-on features.\\n- Why it works: Structured context across sessions, early ambiguity resolution, and plan-derived tasks mirror professional engineering and prevent architectural mistakes.\\n- Actionable workflow: Install/init; pick assistant/language; Specify until the spec is testable; Plan stack/constraints and finalize artifacts (API contract = FE truth); Generate Tasks and execute in phases; implement and test while keeping spec/contract authoritative.'}",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">{&#x27;comprehensive&#x27;: &#x27;Comprehensive Summary: GitHub\u2019s Free Spec-Driven Workflow for AI-Assisted Coding\\n\\nBig Idea and Context\\n- The video introduces a free, GitHub-backed system (often referred to as \u201cSpec Kit\u201d or \u201cspecit\u201d) that turns AI tools like Cursor, Claude/Cloud Code, or the Gemini CLI into a structured, production-grade development workflow in about 15 minutes.\\n- It addresses the core failure mode of AI coding\u2014lack of structured context\u2014by enforcing a spec-first, layered process that preserves intent, prevents architecture mistakes, and yields consistent, correct-by-design code.\\n\\nCore Problem: AI Coding Chaos\\n- \u201cVibe coding\u201d (ad hoc prompting) loses context between sessions, creates conflicting patterns, and inflates ambiguity into sprawling, fragile code.\\n- Ambiguous requirements force rework and refactoring; without a shared source of truth, front-end and back-end drift apart.\\n\\nSolution: Spec-Driven Development\\n- Philosophy:\\n  - Plan in layers before building; write down decisions and make them explicit.\\n  - Use specifications as the single source of truth to align implementation with intent.\\n- Three Phases:\\n  1) Specify: Capture what and why at a high level, surface ambiguity, and resolve it.\\n  2) Plan: Turn requirements into a concrete implementation plan, guided by chosen tech.\\n  3) Tasks: Generate precise, context-rich tasks with a hidden prompt structure that improves execution quality.\\n\\nHow It Works (End-to-End)\\n- Setup and Initialization:\\n  - Install UV (cross-platform options; Homebrew available on macOS).\\n  - Initialize in your project directory via the repo\u2019s command.\\n  - Choose an AI assistant (e.g., Claude/Cloud Code) and scripting language (e.g., Bash).\\n  - The tool scaffolds:\\n    - A \u201cspecify\u201d directory\\n    - Slash-commands for your assistant\\n    - Templates and scripts for each phase\\n    - A persistent project memory store\\n  - Effect: You gain a \u201cjunior architect\u201d that enforces structure and retains context across sessions; all commands run through your chosen assistant.\\n\\n- Phase 1: Specify (Requirements and Clarifications)\\n  - You describe the feature at a high level, then the tool generates spec.markdown with \u201cneeds clarification\u201d prompts.\\n  - Example feature: Version history for prompt changes with a side-by-side, Git-style diff.\\n  - Clarifications include:\\n    - Can users revert to previous versions?\\n    - How to handle deleted prompts and their versions?\\n    - Any collaboration or concurrent editing?\\n    - Retention limits and storage duration?\\n  - Outcome: A precise, testable spec that becomes the source of truth and prevents rework.\\n\\n- Phase 2: Plan (Implementation Blueprint)\\n  - You declare your stack (e.g., Supabase, Next.js) and constraints.\\n  - Outputs:\\n    - Implementation Plan: Integrations, file placement, and sequencing.\\n    - Research Document: Trade-offs, alternatives, and architectural rationale for explainability and future maintenance.\\n    - Data Model: Entities and relationships (e.g., versions, prompts, users).\\n    - API Contract: Endpoints, parameters, and responses\u2014front end\u2019s source of truth aligned with the back end.\\n    - Quick Start Guide: Ensures consistent, repeatable implementation.\\n  - Value: Prevents \u201ccoding into a corner,\u201d aligns team members, and preserves momentum.\\n\\n- Phase 3: Tasks (Execution With Context)\\n  - The tool reads the plan, data model, API contract, and guides to generate a phased, precise task list.\\n  - Tasks include file locations, interactions, and data sources, tying execution directly to design decisions.\\n  - Outcome: Cohesive implementation with fewer contradictions and rewrites; the hidden prompt structure improves quality and consistency.\\n\\nDemo Result and Outcomes\\n- Delivered a working version history feature that compares versions (e.g., v1 vs v4) with a Git-style diff.\\n- Achieved fast development despite added rigor; tests passed and implementation was correct on the first pass.\\n- Preserved context enables rapid follow-on features; artifacts are reusable across future work.\\n\\nWhy It Works: Key Principles\\n- Structured context eliminates drift and model reinterpretation across sessions.\\n- Clarifying ambiguity early has disproportionate ROI versus late refactoring.\\n- Planning artifacts (research, data model, API contract) prevent architectural mistakes and decouple front-end/back-end.\\n- Generating tasks from the plan keeps execution aligned, avoiding fragmented to-do lists.\\n- Mirrors professional engineering practices that scale and prevent architecture disasters.\\n\\nActionable Workflow\\n1) Install UV and initialize the Spec Kit in your project.\\n2) Select your AI assistant and scripting language; confirm commands run through your assistant.\\n3) Specify:\\n   - Describe the feature at a high level (what/why).\\n   - Resolve all \u201cneeds clarification\u201d prompts until the spec is testable.\\n4) Plan:\\n   - Declare tech stack and constraints.\\n   - Review and refine the plan, research, data model, API contract, and quick start guide.\\n   - Treat the API contract as the front end\u2019s source of truth.\\n5) Tasks:\\n   - Generate tasks directly from the artifacts.\\n   - Execute tasks in phases; rely on the persistent memory for context continuity.\\n6) Implement and test:\\n   - Follow the plan to avoid backtracking; iterate as needed while keeping the spec and contract authoritative.\\n\\nKey Takeaways\\n- The fastest way to build with AI is to slow down briefly: specify, plan, then code.\\n- Specs and API contracts are the backbone for consistency, scale, and team alignment.\\n- Context persistence across sessions turns AI tools into reliable collaborators rather than code generators.\\n- Spec-driven development yields \u201czero ambiguity,\u201d avoids costly rewrites, and gets production-ready code on the first pass.&#x27;, &#x27;bullet_points&#x27;: &#x27;- What it is: A free, GitHub-backed Spec Kit (\u201cspecit\u201d) that turns AI tools (Cursor, Claude/Cloud Code, Gemini CLI) into a production-grade, spec-driven workflow in ~15 minutes, acting like a persistent-context junior architect.\\n- Problem it solves: Ad hoc \u201cvibe coding\u201d loses context, creates conflicting patterns and ambiguity, and leads to fragile code and front/back-end drift.\\n- Core philosophy: Plan in layers and write decisions down; use a single source of truth (the spec) to align implementation with intent.\\n- Three-phase flow: Specify (clarify what/why), Plan (implementation blueprint and rationale), Tasks (precise, context-rich execution prompts).\\n- Setup: Install UV, initialize in your repo, choose an AI assistant and scripting language; the tool scaffolds directories, slash-commands, templates/scripts, and a persistent memory store.\\n- Specify outputs: spec.markdown with targeted clarifications (e.g., revert behavior, deleted items, concurrency, retention) producing a precise, testable spec that prevents rework.\\n- Plan outputs: Implementation plan, research/trade-offs, data model, API contract, and quick-start guide\u2014aligning front end and back end and avoiding \u201ccoding into a corner.\u201d\\n- Tasks outputs: Phased task list tied to the plan/data/API with file paths and interactions\u2014driving cohesive implementation and higher-quality AI execution.\\n- Demo outcome: Delivered version history with Git-style diffs (e.g., v1 vs v4), passed tests, and shipped correctly on the first pass; artifacts accelerate follow-on features.\\n- Why it works: Structured context across sessions, early ambiguity resolution, and plan-derived tasks mirror professional engineering and prevent architectural mistakes.\\n- Actionable workflow: Install/init; pick assistant/language; Specify until the spec is testable; Plan stack/constraints and finalize artifacts (API contract = FE truth); Generate Tasks and execute in phases; implement and test while keeping spec/contract authoritative.&#x27;}</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        }
      ],
      "pagination": {
        "page": 1,
        "size": 3,
        "total_count": 40,
        "total_pages": 14,
        "has_next": true,
        "has_prev": false
      },
      "sort": "newest",
      "filters": {
        "category": [
          "Technology"
        ]
      },
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "timestamp": "2025-09-18T11:21:43.473974",
    "count_comparison": {
      "sqlite": 3,
      "postgres": 3,
      "match": true
    }
  },
  {
    "endpoint": "/api/reports",
    "params": {
      "sort": "video_newest",
      "size": 3
    },
    "sqlite_status": 200,
    "postgres_status": 200,
    "sqlite_data": {
      "reports": [
        {
          "id": "yt:DqBQuTuOqgY",
          "title": "GLM Code: FASTEST & BEST AI Coder + Opensource! The End of ClaudeCode!",
          "thumbnail_url": "https://i.ytimg.com/vi/DqBQuTuOqgY/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=DqBQuTuOqgY",
          "channel": "WorldofAI",
          "published_at": "2025-09-17T00:00:00Z",
          "duration_seconds": 543,
          "analysis": {
            "category": [
              "AI Software Development"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Agents & MCP/Orchestration",
                  "APIs & SDKs"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "glm-4-5-coding-model",
              "claude-code-and-open-code-setu",
              "agentic-coding-and-lsp-feature"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 9478
          },
          "media_metadata": {
            "video_duration_seconds": 543,
            "mp3_duration_seconds": 0
          },
          "file_stem": "DqBQuTuOqgY",
          "video_id": "DqBQuTuOqgY",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Agents & MCP/Orchestration\", \"APIs & SDKs\"]}]}",
          "indexed_at": "2025-09-17T06:34:00.302974",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1724
        },
        {
          "id": "yt:KRWQTF0iAdM",
          "title": "GitHub's Free Tool Ends AI Coding Chaos (Demo Inside)",
          "thumbnail_url": "https://i.ytimg.com/vi_webp/KRWQTF0iAdM/maxresdefault.webp",
          "canonical_url": "https://www.youtube.com/watch?v=KRWQTF0iAdM",
          "channel": "Sean Kochel",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 857,
          "analysis": {
            "category": [
              "Technology"
            ],
            "subcategory": "Tech News & Trends",
            "categories": [
              {
                "category": "Technology",
                "subcategories": [
                  "Tech News & Trends",
                  "Software Tutorials"
                ]
              }
            ],
            "content_type": "Tutorial",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "github-tool",
              "ai-coding-assistant",
              "developer-productivity"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 15051
          },
          "media_metadata": {
            "video_duration_seconds": 857,
            "mp3_duration_seconds": 0
          },
          "file_stem": "KRWQTF0iAdM",
          "video_id": "KRWQTF0iAdM",
          "subcategories_json": "{\"categories\": [{\"category\": \"Technology\", \"subcategories\": [\"Tech News & Trends\", \"Software Tutorials\"]}]}",
          "indexed_at": "2025-09-17T00:05:39.255087",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 2788
        },
        {
          "id": "yt:sJ7kI13c-ig",
          "title": "GPT-5 Codex V/S Claude Code & GLM Code: Should YOU SWITCH?",
          "thumbnail_url": "https://i.ytimg.com/vi/sJ7kI13c-ig/maxresdefault.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=sJ7kI13c-ig",
          "channel": "AICodeKing",
          "published_at": "2025-09-16T00:00:00Z",
          "duration_seconds": 497,
          "analysis": {
            "category": [
              "AI Software Development",
              "Reviews & Products"
            ],
            "subcategory": "Model Selection & Evaluation",
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "Cost Optimisation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Reviews & Products",
                "subcategories": [
                  "Comparisons & Tests",
                  "Buying Guides"
                ]
              }
            ],
            "content_type": "Review",
            "complexity_level": "Intermediate",
            "language": "en",
            "key_topics": [
              "gpt-5-codex",
              "claude-code",
              "glm-code",
              "coding-benchmarks",
              "multi-file-repo-edits"
            ],
            "named_entities": []
          },
          "media": {
            "has_audio": false,
            "audio_duration_seconds": 0,
            "has_transcript": true,
            "transcript_chars": 6415
          },
          "media_metadata": {
            "video_duration_seconds": 497,
            "mp3_duration_seconds": 0
          },
          "file_stem": "sJ7kI13c-ig",
          "video_id": "sJ7kI13c-ig",
          "subcategories_json": "{\"categories\": [{\"category\": \"AI Software Development\", \"subcategories\": [\"Model Selection & Evaluation\", \"Cost Optimisation\", \"APIs & SDKs\"]}, {\"category\": \"Reviews & Products\", \"subcategories\": [\"Comparisons & Tests\", \"Buying Guides\"]}]}",
          "indexed_at": "2025-09-17T00:16:25.157435",
          "original_language": "en",
          "summary_language": "en",
          "audio_language": "en",
          "word_count": 1214
        }
      ],
      "pagination": {
        "page": 1,
        "size": 3,
        "total_count": 81,
        "total_pages": 27,
        "has_next": true,
        "has_prev": false
      },
      "sort": "video_newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "postgres_data": {
      "reports": [
        {
          "video_id": "lgs9RzjrW9Y",
          "id": "yt:lgs9rzjrw9y",
          "title": "How Good Is Grok 42 At Coding",
          "channel_name": "Ray Amjad",
          "published_at": null,
          "duration_seconds": 0,
          "thumbnail_url": "https://i.ytimg.com/vi/lgs9RzjrW9Y/hq720.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=lgs9RzjrW9Y",
          "subcategories_json": {
            "categories": [
              {
                "category": "AI Software Development",
                "subcategories": [
                  "Model Selection & Evaluation",
                  "APIs & SDKs"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Programming & Software Development"
                ]
              }
            ]
          },
          "topics_json": [
            "ai-models",
            "coding",
            "performance-evaluation",
            "large-language-models"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-10T17:03:07+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Two new stealth models from X-A-I, Sonoma Dusk Alpha and Sonoma Sky Alpha, just landed with a massive two\u2011million\u2011token context window, and they\u2019re free to use on OpenRouter right now. They appear to be Grok models under the hood. The key takeaway: for serious coding on a production app, Claude Opus 4.1 still delivers the most reliable, production\u2011ready changes, while Sky looks promising and fast, and Dusk is blazing quick but too error\u2011prone.\n\nFirst, let\u2019s look at the performance results. Sky Alpha cranks out about 168 tokens per second, and Dusk Alpha hits roughly 204 tokens per second. That\u2019s far faster than Claude Opus 4.1 at around 40 tokens per second and \u201cClaude Sonic 4\u201d at about 60 tokens per second. Speeds may slow once usage ramps up, but right now, these models are quick enough to keep you focused instead of context\u2011switching.\n\nMoving on to the real\u2011world coding test. The task was to add a recommendation system to a live app called Tensor AI, using embeddings plus user signals like clicks, time on article, and like or dislike feedback, with the goal of getting solid recommendations after about five interactions. All models were asked to plan and implement the feature across front end and back end.\n\nThe most important finding was in the planning stage: Sky produced the most comprehensive implementation plan. Claude Opus 4.1 was close, but it missed role\u2011level security and internationalization, often shortened to i\u2011eighteen\u2011n, for the mobile UI. Dusk\u2019s plan was the least complete.\n\nHowever, there\u2019s an important trade\u2011off once you move from plan to code. In implementation, Claude Opus 4.1 did the most production\u2011ready work. It added a dedicated service for tracking interactions, used a database function for the heavy lifting, kept files intact, and organized the code cleanly in a centralized service. Sky got much of the way there but cut corners: it tracked interactions via hooks rather than a dedicated service, skipped changes to the localization files, and pushed vector math into an API endpoint instead of using a database function. Both Sky and Dusk also randomly deleted schema files like articles and categories, which is a red flag for reliability.\n\nWhen it comes to stability versus speed, that\u2019s the crux. Dusk is very fast, but it failed to make required front\u2011end changes and showed the worst reliability. Sky is fast and often smart, but still made disruptive edits and architectural choices that aren\u2019t ideal for a production backend. Opus 4.1 is slower, yet it stayed within the guardrails, avoided destructive changes, and produced code you could ship sooner.\n\nAs for value and pricing, here\u2019s where it gets interesting. Both Sonoma models are in alpha and free right now, with final pricing and capabilities still unknown. If Sky Alpha ends up significantly cheaper than Claude Opus 4.1, it could be an attractive option for teams willing to add prompting discipline, guardrails, and thorough code review. Dusk Alpha, despite its speed, isn\u2019t ready for production work in this scenario. Also note a diff comparison showed Sky and Dusk removed far more lines than Opus, which usually signals riskier edits; Opus kept changes tight and focused. In a niche case where you want lots of analytics collection on user behavior, Sky\u2019s approach can be appealing, but it still needs oversight.\n\nSo what\u2019s the bottom line? For production\u2011grade coding today, pick Claude Opus 4.1: it\u2019s slower and likely pricier, but the reliability and organization make it the best value when shipping real features. Sky Alpha is a compelling, ultra\u2011fast alternative with a two\u2011million\u2011token context window; if it\u2019s priced well below Opus, it could be worth using behind strong tests and code review. Dusk Alpha is great for speed demos or low\u2011risk experiments, but not for critical changes. While the Sonoma models are free, take advantage to prototype and benchmark, then reserve Opus 4.1 for merges to main until pricing and stability for Sky solidify.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Two new stealth models from X-A-I, Sonoma Dusk Alpha and Sonoma Sky Alpha, just landed with a massive two\u2011million\u2011token context window, and they\u2019re free to use on OpenRouter right now. They appear to be Grok models under the hood. The key takeaway: for serious coding on a production app, Claude Opus 4.1 still delivers the most reliable, production\u2011ready changes, while Sky looks promising and fast, and Dusk is blazing quick but too error\u2011prone.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s look at the performance results. Sky Alpha cranks out about 168 tokens per second, and Dusk Alpha hits roughly 204 tokens per second. That\u2019s far faster than Claude Opus 4.1 at around 40 tokens per second and \u201cClaude Sonic 4\u201d at about 60 tokens per second. Speeds may slow once usage ramps up, but right now, these models are quick enough to keep you focused instead of context\u2011switching.</p>\n<p class=\"mb-4 leading-relaxed\">Moving on to the real\u2011world coding test. The task was to add a recommendation system to a live app called Tensor AI, using embeddings plus user signals like clicks, time on article, and like or dislike feedback, with the goal of getting solid recommendations after about five interactions. All models were asked to plan and implement the feature across front end and back end.</p>\n<p class=\"mb-4 leading-relaxed\">The most important finding was in the planning stage: Sky produced the most comprehensive implementation plan. Claude Opus 4.1 was close, but it missed role\u2011level security and internationalization, often shortened to i\u2011eighteen\u2011n, for the mobile UI. Dusk\u2019s plan was the least complete.</p>\n<p class=\"mb-4 leading-relaxed\">However, there\u2019s an important trade\u2011off once you move from plan to code. In implementation, Claude Opus 4.1 did the most production\u2011ready work. It added a dedicated service for tracking interactions, used a database function for the heavy lifting, kept files intact, and organized the code cleanly in a centralized service. Sky got much of the way there but cut corners: it tracked interactions via hooks rather than a dedicated service, skipped changes to the localization files, and pushed vector math into an API endpoint instead of using a database function. Both Sky and Dusk also randomly deleted schema files like articles and categories, which is a red flag for reliability.</p>\n<p class=\"mb-4 leading-relaxed\">When it comes to stability versus speed, that\u2019s the crux. Dusk is very fast, but it failed to make required front\u2011end changes and showed the worst reliability. Sky is fast and often smart, but still made disruptive edits and architectural choices that aren\u2019t ideal for a production backend. Opus 4.1 is slower, yet it stayed within the guardrails, avoided destructive changes, and produced code you could ship sooner.</p>\n<p class=\"mb-4 leading-relaxed\">As for value and pricing, here\u2019s where it gets interesting. Both Sonoma models are in alpha and free right now, with final pricing and capabilities still unknown. If Sky Alpha ends up significantly cheaper than Claude Opus 4.1, it could be an attractive option for teams willing to add prompting discipline, guardrails, and thorough code review. Dusk Alpha, despite its speed, isn\u2019t ready for production work in this scenario. Also note a diff comparison showed Sky and Dusk removed far more lines than Opus, which usually signals riskier edits; Opus kept changes tight and focused. In a niche case where you want lots of analytics collection on user behavior, Sky\u2019s approach can be appealing, but it still needs oversight.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? For production\u2011grade coding today, pick Claude Opus 4.1: it\u2019s slower and likely pricier, but the reliability and organization make it the best value when shipping real features. Sky Alpha is a compelling, ultra\u2011fast alternative with a two\u2011million\u2011token context window; if it\u2019s priced well below Opus, it could be worth using behind strong tests and code review. Dusk Alpha is great for speed demos or low\u2011risk experiments, but not for critical changes. While the Sonoma models are free, take advantage to prototype and benchmark, then reserve Opus 4.1 for merges to main until pricing and stability for Sky solidify.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "VsRmyY3Db1Y",
          "id": "yt:vsrmyy3db1y",
          "title": "I Made The Milky Way The Size Of The Us To See How",
          "channel_name": "EpicSpaceman",
          "published_at": null,
          "duration_seconds": 444,
          "thumbnail_url": "https://i.ytimg.com/vi/VsRmyY3Db1Y/hq720.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=VsRmyY3Db1Y",
          "subcategories_json": {
            "categories": [
              {
                "category": "Education",
                "subcategories": [
                  "Tutorials & Courses"
                ]
              },
              {
                "category": "Technology",
                "subcategories": [
                  "Tech Reviews & Comparisons"
                ]
              }
            ]
          },
          "topics_json": [
            "astronomy",
            "scale-modeling",
            "visualization",
            "milky-way"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-10T17:03:08+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Imagine our entire galaxy stretched across a map of the United States. With the Milky Way that big, our solar system would fit on the tip of a finger. That\u2019s the scale we\u2019re talking about: the Sun would be smaller than a red blood cell, and Earth would be tinier than a coronavirus particle.\n\nFirst, let\u2019s anchor what we actually see in the night sky. That milky band arcing overhead is the disk of the Milky Way, and we live inside it, roughly one third to halfway out from the center, depending on how you define the galaxy\u2019s edge. Look toward the center and the band brightens with dense star fields; look sideways, away from the disk, and the stars thin out.\n\nNow, scale the galaxy up to the diameter of America. Put the galactic center in Kansas, and our Sun sits out near Denver, Colorado. All the stars visible to the naked eye fit within a tiny neighborhood around us\u2014only as far as the city lights of Denver. In other words, our familiar constellations come from a very local patch of the Milky Way.\n\nZoom in further to the fingertip analogy. On this scale, the Sun is small enough to nestle between the ridges of a fingerprint, about half the size of a red blood cell. Earth would be about three times smaller than the coronavirus. Jupiter would sit a few fingerprint ridges farther out, and Neptune would be just a centimeter away, right near the edge of your fingertip. The entire spread of planetary orbits shrinks to the subtle swells of skin.\n\nIt\u2019s easy to feel tiny in the face of that. But there\u2019s a deeper symmetry in scale that helps. An electron is to a human what a human is to the Milky Way. To the world of the very small, you are vast\u2014complex, conscious, and capable of curiosity, a way for the universe to know itself.\n\nSo what\u2019s the bottom line? The Milky Way alone is so immense that our solar system is a speck on a fingertip, and the stars we see are just our local block. Yet your place in this story isn\u2019t insignificant. When the night sky feels overwhelming, remember the fingertip and the electron: you\u2019re small, yes, but also unimaginably large to the worlds beneath you.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Imagine our entire galaxy stretched across a map of the United States. With the Milky Way that big, our solar system would fit on the tip of a finger. That\u2019s the scale we\u2019re talking about: the Sun would be smaller than a red blood cell, and Earth would be tinier than a coronavirus particle.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s anchor what we actually see in the night sky. That milky band arcing overhead is the disk of the Milky Way, and we live inside it, roughly one third to halfway out from the center, depending on how you define the galaxy\u2019s edge. Look toward the center and the band brightens with dense star fields; look sideways, away from the disk, and the stars thin out.</p>\n<p class=\"mb-4 leading-relaxed\">Now, scale the galaxy up to the diameter of America. Put the galactic center in Kansas, and our Sun sits out near Denver, Colorado. All the stars visible to the naked eye fit within a tiny neighborhood around us\u2014only as far as the city lights of Denver. In other words, our familiar constellations come from a very local patch of the Milky Way.</p>\n<p class=\"mb-4 leading-relaxed\">Zoom in further to the fingertip analogy. On this scale, the Sun is small enough to nestle between the ridges of a fingerprint, about half the size of a red blood cell. Earth would be about three times smaller than the coronavirus. Jupiter would sit a few fingerprint ridges farther out, and Neptune would be just a centimeter away, right near the edge of your fingertip. The entire spread of planetary orbits shrinks to the subtle swells of skin.</p>\n<p class=\"mb-4 leading-relaxed\">It\u2019s easy to feel tiny in the face of that. But there\u2019s a deeper symmetry in scale that helps. An electron is to a human what a human is to the Milky Way. To the world of the very small, you are vast\u2014complex, conscious, and capable of curiosity, a way for the universe to know itself.</p>\n<p class=\"mb-4 leading-relaxed\">So what\u2019s the bottom line? The Milky Way alone is so immense that our solar system is a speck on a fingertip, and the stars we see are just our local block. Yet your place in this story isn\u2019t insignificant. When the night sky feels overwhelming, remember the fingertip and the electron: you\u2019re small, yes, but also unimaginably large to the worlds beneath you.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        },
        {
          "video_id": "_1LdMWlNYS4",
          "id": "yt:_1ldmwlnys4",
          "title": "That Time It Rained For Two Million Years",
          "channel_name": "PBS Eons",
          "published_at": null,
          "duration_seconds": 0,
          "thumbnail_url": "https://i.ytimg.com/vi/_1LdMWlNYS4/hq720.jpg",
          "canonical_url": "https://www.youtube.com/watch?v=_1LdMWlNYS4",
          "subcategories_json": {
            "categories": [
              {
                "category": "History",
                "subcategories": [
                  "Ancient Civilizations",
                  "Historical Analysis"
                ]
              },
              {
                "category": "Education",
                "subcategories": [
                  "Academic Subjects"
                ]
              }
            ]
          },
          "topics_json": [
            "paleoecology",
            "geological-history",
            "carnian-pluvial-episode",
            "pangea"
          ],
          "analysis_json": null,
          "has_audio": false,
          "indexed_at": "2025-09-08T07:03:34+00:00",
          "created_at": "2025-09-18T06:44:31.294358+00:00",
          "updated_at": "2025-09-18T06:44:31.294358+00:00",
          "summary_variant": "audio",
          "summary_text": "Picture Earth 250 million years ago: a hot, flat supercontinent baked under a sky rich in carbon dioxide, with oceans like warm baths and interiors parched and barren. Then, around 234 million years ago, everything flipped. Rain arrived, not for a season, but for roughly two million years, and that wet pulse reshaped life on land and cleared the way for dinosaurs to take over.\n\nFirst, let\u2019s set the stage. With all the continents fused into Pangea, moisture-laden air rarely penetrated far inland, so the early Triassic was marked by red sandstones and dry soils, not coal swamps. Crurotarsans\u2014crocodile-line reptiles like pseudosuchians and phytosaurs\u2014ruled as top predators. Rhynchosaurs, short, beaked herbivores, were abundant, and dicynodonts\u2014tusked, beak\u2011jawed relatives of mammals\u2014were everywhere, especially Lystrosaurus. Dinosaurs existed, but they were minor players.\n\nNow for the evidence of the wet turn. Between about 234 and 232 million years ago, rock layers worldwide suddenly record rivers, giant lakes, wet soils, and thick coal. You see it from England and Austria to Utah, Israel, Italy, China, and across the Americas, all dating to the same window. In places like what\u2019s now Utah, average annual rainfall likely nearly quadrupled, peaking around 1,400 millimeters, roughly fifty\u2011five inches a year\u2014temperate rainforest levels\u2014repeated year after year. This was not a single deluge, but sustained, global humidity. Geologists call it the Carnian Pluvial Episode.\n\nThe most important biological shift was dominance. At the start of this interval, dinosaurs made up about five percent of land vertebrate fossils. By the end, they accounted for more than ninety percent. Rhynchosaurs, dicynodonts, and many early crurotarsans dwindled or vanished.\n\nWhy did dinosaurs surge? The rain didn\u2019t just fill rivers; it transformed plant communities. Tall conifers and coal\u2011forming plants like Bennettitales spread. That favored herbivores that could process woody, fibrous food and reach higher browse. Rhynchosaurs were short and couldn\u2019t rear up to feed from trees, fine in arid shrublands, but poorly matched to conifer forests. Dicynodonts had beaks but no teeth, and they didn\u2019t use gastroliths\u2014stones in the gut\u2014to grind plant matter. Their coprolites show mostly soft ferns and little wood. By contrast, some herbivorous dinosaurs had both teeth and gastroliths, and their coprolites can be up to eighty\u2011five percent wood. As the menu shifted to tough, high\u2011growing plants, dinosaurs were simply better equipped. When the plant\u2011eaters changed, the meat\u2011eaters followed: with rhynchosaurs and dicynodonts in decline, many crurotarsans lost key prey, further opening space for dinosaurs.\n\nAs for the cause of all that rain, a colossal volcanic episode set the stage. Around 235 million years ago, the Wrangellian eruptions in what\u2019s now Alaska and British Columbia poured out lava up to six kilometers thick over more than five million years. They pumped enough carbon dioxide into the air to warm the planet by roughly three to ten degrees Celsius. Warmer air holds more moisture and drives a faster water cycle, so humidity rose and, eventually, rain reached deep into Pangea\u2019s interior. That\u2019s why this interval is also called the Carnian Humid Episode.\n\nSo how did it stop? As volcanic emissions waned, Earth\u2019s long carbon cycle caught up. Plants locked carbon into biomass, weathering pulled carbon dioxide from the air, and oceans sequestered it as carbonate rocks like limestone. By around 230 million years ago, the climate slid back to the classic hot, dry Triassic pattern, lasting until Pangea began to break apart.\n\nIn the end, a two\u2011million\u2011year wet interlude flipped ecosystems, spread conifer forests that would ultimately give rise to modern pines, and propelled dinosaurs from bit players to rulers of the Mesozoic. The rains didn\u2019t just fall\u2014they rewrote the script of life on land.",
          "summary_html": "<p class=\"mb-4 leading-relaxed\">Picture Earth 250 million years ago: a hot, flat supercontinent baked under a sky rich in carbon dioxide, with oceans like warm baths and interiors parched and barren. Then, around 234 million years ago, everything flipped. Rain arrived, not for a season, but for roughly two million years, and that wet pulse reshaped life on land and cleared the way for dinosaurs to take over.</p>\n<p class=\"mb-4 leading-relaxed\">First, let\u2019s set the stage. With all the continents fused into Pangea, moisture-laden air rarely penetrated far inland, so the early Triassic was marked by red sandstones and dry soils, not coal swamps. Crurotarsans\u2014crocodile-line reptiles like pseudosuchians and phytosaurs\u2014ruled as top predators. Rhynchosaurs, short, beaked herbivores, were abundant, and dicynodonts\u2014tusked, beak\u2011jawed relatives of mammals\u2014were everywhere, especially Lystrosaurus. Dinosaurs existed, but they were minor players.</p>\n<p class=\"mb-4 leading-relaxed\">Now for the evidence of the wet turn. Between about 234 and 232 million years ago, rock layers worldwide suddenly record rivers, giant lakes, wet soils, and thick coal. You see it from England and Austria to Utah, Israel, Italy, China, and across the Americas, all dating to the same window. In places like what\u2019s now Utah, average annual rainfall likely nearly quadrupled, peaking around 1,400 millimeters, roughly fifty\u2011five inches a year\u2014temperate rainforest levels\u2014repeated year after year. This was not a single deluge, but sustained, global humidity. Geologists call it the Carnian Pluvial Episode.</p>\n<p class=\"mb-4 leading-relaxed\">The most important biological shift was dominance. At the start of this interval, dinosaurs made up about five percent of land vertebrate fossils. By the end, they accounted for more than ninety percent. Rhynchosaurs, dicynodonts, and many early crurotarsans dwindled or vanished.</p>\n<p class=\"mb-4 leading-relaxed\">Why did dinosaurs surge? The rain didn\u2019t just fill rivers; it transformed plant communities. Tall conifers and coal\u2011forming plants like Bennettitales spread. That favored herbivores that could process woody, fibrous food and reach higher browse. Rhynchosaurs were short and couldn\u2019t rear up to feed from trees, fine in arid shrublands, but poorly matched to conifer forests. Dicynodonts had beaks but no teeth, and they didn\u2019t use gastroliths\u2014stones in the gut\u2014to grind plant matter. Their coprolites show mostly soft ferns and little wood. By contrast, some herbivorous dinosaurs had both teeth and gastroliths, and their coprolites can be up to eighty\u2011five percent wood. As the menu shifted to tough, high\u2011growing plants, dinosaurs were simply better equipped. When the plant\u2011eaters changed, the meat\u2011eaters followed: with rhynchosaurs and dicynodonts in decline, many crurotarsans lost key prey, further opening space for dinosaurs.</p>\n<p class=\"mb-4 leading-relaxed\">As for the cause of all that rain, a colossal volcanic episode set the stage. Around 235 million years ago, the Wrangellian eruptions in what\u2019s now Alaska and British Columbia poured out lava up to six kilometers thick over more than five million years. They pumped enough carbon dioxide into the air to warm the planet by roughly three to ten degrees Celsius. Warmer air holds more moisture and drives a faster water cycle, so humidity rose and, eventually, rain reached deep into Pangea\u2019s interior. That\u2019s why this interval is also called the Carnian Humid Episode.</p>\n<p class=\"mb-4 leading-relaxed\">So how did it stop? As volcanic emissions waned, Earth\u2019s long carbon cycle caught up. Plants locked carbon into biomass, weathering pulled carbon dioxide from the air, and oceans sequestered it as carbonate rocks like limestone. By around 230 million years ago, the climate slid back to the classic hot, dry Triassic pattern, lasting until Pangea began to break apart.</p>\n<p class=\"mb-4 leading-relaxed\">In the end, a two\u2011million\u2011year wet interlude flipped ecosystems, spread conifer forests that would ultimately give rise to modern pines, and propelled dinosaurs from bit players to rulers of the Mesozoic. The rains didn\u2019t just fall\u2014they rewrote the script of life on land.</p>",
          "summary_revision": 1,
          "summary_created_at": "2025-09-18T06:56:02.389599+00:00"
        }
      ],
      "pagination": {
        "page": 1,
        "size": 3,
        "total_count": 81,
        "total_pages": 27,
        "has_next": true,
        "has_prev": false
      },
      "sort": "video_newest",
      "filters": {},
      "deployment_version": "v2025-09-11-sorting-fix"
    },
    "timestamp": "2025-09-18T11:21:44.232270",
    "count_comparison": {
      "sqlite": 3,
      "postgres": 3,
      "match": true
    }
  },
  {
    "endpoint": "/NVkHfn6-Zl4.json",
    "params": {
      "v": "2"
    },
    "sqlite_status": "ERROR: Expecting value: line 1 column 1 (char 0)",
    "postgres_status": "ERROR: Expecting value: line 1 column 1 (char 0)",
    "sqlite_data": null,
    "postgres_data": null,
    "timestamp": "2025-09-18T11:21:45.375485"
  }
]